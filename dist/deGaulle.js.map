{"version":3,"file":"deGaulle.js","sources":["../src/index.js"],"sourcesContent":["//\n//\n//\nconst nomnom = require('@gerhobbelt/nomnom');\n\nconst MarkDown = require('@gerhobbelt/markdown-it');\n\nconst mdPluginCollective = require('markdown-it-dirty-dozen');\n\nconst pkg = require('../package.json');\n\nconst jsdom = require('jsdom');\nconst { JSDOM } = jsdom;\nconst glob = require('@gerhobbelt/glob');\nconst gitignoreParser = require('@gerhobbelt/gitignore-parser');\nconst assert = require('assert');\nconst _ = require('lodash');\n\nconst path = require('path');\nconst fs = require('fs');\n\nlet DEBUG = 1;\n\nlet markdownTokens = {};\n\n\nconst config = {\n  docTreeBasedir: null,\n  destinationPath: null\n};\n\nnomnom.script('deGaulle');\n\nnomnom\n  .command('build')\n  .option('debug', {\n    abbr: 'd',\n    flag: false,\n    help: 'Print debugging info'\n  })\n  .option('config', {\n    abbr: 'c',\n    'default': 'config.json',\n    help: 'JSON file with tests to run'\n  })\n  .callback(function (opts, cmd) {\n    try {\n      buildWebsite(opts, cmd);\n    } catch (ex) {\n      console.error(`ERROR: ${ex.message}\\n\\nException:\\n${ex}`);\n      process.exit(5);\n    }\n  })\n  .help('build website from sources');\n\nnomnom\n  .command('sanity')\n  .option('debug', {\n    abbr: 'd',\n    flag: false,\n    help: 'Print debugging info'\n  })\n  .option('config', {\n    abbr: 'c',\n    'default': 'config.json',\n    help: 'JSON file with tests to run'\n  })\n  .option('outfile', {\n    abbr: 'o',\n    help: 'file to write results to'\n  })\n  .callback(function (\n    opts\n    /* , cmd */\n  ) {\n    try {\n      sanityCheck(opts);\n    } catch (ex) {\n      console.error(`ERROR: ${ex.message}\\n\\nException:\\n${ex}`);\n      process.exit(5);\n    }\n  })\n  .help('run the sanity tests');\n\nnomnom\n  .nocommand()\n  .option('debug', {\n    abbr: 'd',\n    flag: false,\n    help: 'Print debugging info'\n  })\n  .option('config', {\n    abbr: 'c',\n    'default': 'config.json',\n    help: 'JSON file with tests to run'\n  })\n  .option('version', {\n    flag: true,\n    help: 'print version and exit',\n    callback: function () {\n      return `version ${pkg.version}`;\n    }\n  })\n  .callback(function (opts, cmd) {\n    try {\n      buildWebsite(opts, cmd);\n    } catch (ex) {\n      console.error(`ERROR: ${ex.message}\\n\\nException:\\n${ex}`);\n      process.exit(5);\n    }\n  });\n\nnomnom.parse();\n\n\n\n// -- done --\n\n\n\nfunction unixify(path) {\n  return path.replace(/\\\\/g, '/');\n}\n\nfunction absSrcPath(rel) {\n  let p = path.join(config.docTreeBasedir, rel);\n  return unixify(path.resolve(p));\n}\n\nfunction absDstPath(rel) {\n  if (!config.destinationPath) {\n    throw new Error('Internal error: used too early');\n  }\n  let p = path.join(config.destinationPath, rel);\n  return unixify(path.resolve(p));\n}\n\nfunction readOptionalTxtConfigFile(rel) {\n  let p = absSrcPath(rel);\n  if (fs.existsSync(p)) {\n    let src = fs.readFileSync(p, 'utf8');\n  // - split into lines\n  // - filter out any lines whicch don't have an '='\n  // - split each line across the initial '=' in there.\n  // - turn this into a hash table?\n    let lines = src.split(/[\\r\\n]/g);\n    lines = lines.filter((l) => l.trim().length > 1 && l.includes('=')).map((l) => {\n      let parts = l.split('=');\n      if (parts.length !== 2) {\n        throw new Error(`config line in ${rel} is expected to have only one '='`);\n      }\n      parts = parts.map((l) => l.trim());\n      return parts;\n    });\n    let rv = {};\n    lines.forEach((l) => {\n      rv[l[0]] = l[1];\n    });\n    return rv;\n  }\n  return {};\n}\n\nfunction myCustomPageNamePostprocessor(spec) {\n  // clean up unwanted characters\n  spec = spec.replace(/ :: /g, '/');\n  spec = spec.replace(/ --* /g, '/');\n  spec = _.deburr(spec).trim();\n  // normalize case\n  spec = spec.toLowerCase();\n  spec = spec\n      .replace(/[^\\w\\d\\s\\/_-]/g, '_');\n  spec = spec\n      .replace(/__+/g, '_');\n  spec = spec\n      .replace(/\\s+/g, ' ');\n  if (DEBUG >= 7) console.log('myCustomPageNamePostprocessor STAGE 1', spec);\n  spec = spec\n      .replace(/_-_/g, '_');\n  spec = spec\n      .replace(/ - /g, ' ');\n  spec = spec\n      .replace(/[ _]* [ _]*/g, ' ');\n  if (DEBUG >= 7) console.log('myCustomPageNamePostprocessor STAGE 2', spec);\n  spec = spec\n      .replace(/(^|\\/)[ _]+/g, '$1');\n  spec = spec\n      .replace(/[ _]+($|\\/)/g, '$1');\n  if (DEBUG >= 7) console.log('myCustomPageNamePostprocessor STAGE 3', spec);\n  spec = spec\n      .replace(/ /g, '_');\n  if (DEBUG >= 7) console.log('myCustomPageNamePostprocessor STAGE 4', spec);\n\n\n  return spec;\n}\n\nasync function buildWebsite(opts, command) {\n  console.log(\n    `buildWebsite: command: ${command || '<no-command>'}, opts: ${JSON.stringify(\n      opts,\n      null,\n      2\n    )}`\n  );\n\n  DEBUG = Math.max(DEBUG, Number.isFinite(+opts.debug) ? +opts.debug : opts.debug ? 1 : 0);\n  console.log('DEBUG = ', DEBUG);\n\n  let paths = opts._.slice(command ? 1 : 0);\n  const minPathsCount = 1;\n\n  if (!paths || paths.length < minPathsCount) {\n    throw new Error(\n      'Must specify at least one file path as starting point. None were specified.'\n    );\n  }\n\n  let firstEntryPointPath = paths[0];\n  // make sure we start with an absolute path; everything will derived off this one.\n  if (!path.isAbsolute(firstEntryPointPath)) {\n    firstEntryPointPath = path.join(process.cwd(), firstEntryPointPath);\n  }\n  firstEntryPointPath = unixify(path.normalize(firstEntryPointPath));\n  if (DEBUG >= 1) console.log('firstEntryPointPath = ', firstEntryPointPath);\n\n  let entryStats = fs.lstatSync(firstEntryPointPath);\n\n  if (entryStats && entryStats.isDirectory()) {\n    // check if any of the default entry points exist:\n    // - index.md\n    // - index.html\n    // - README.md\n    let indexFile;\n    let indexFilePriority = 0;\n    let scanPath = path.join(firstEntryPointPath, '*.{md,htm,html}');\n    scanPath = unixify(scanPath);\n    if (DEBUG >= 1) console.log('scanPath:', scanPath);\n    let files = glob.sync(scanPath, {\n      nosort: true,\n      nomount: true,\n      nounique: false,\n      nocase: true,     //<-- uncomment this one for total failure to find any files >:-((\n      nodir: true,\n      nobrace: false,\n      gitignore: true\n    });\n    if (DEBUG >= 1) console.log(`root point DIR --> scan: ${JSON.stringify(files, null, 2)}`);\n\n    for (const f of files || []) {\n      switch (path.basename(f.toLowerCase())) {\n      case 'index.md':\n        if (indexFilePriority < 10) {\n          indexFilePriority = 10;\n          indexFile = f;\n        }\n\n        continue;\n\n      case 'index.htm':\n      case 'index.html':\n        if (indexFilePriority < 5) {\n          indexFilePriority = 5;\n          indexFile = f;\n        }\n\n        continue;\n\n      case 'readme.md':\n        if (indexFilePriority < 1) {\n          indexFilePriority = 1;\n          indexFile = f;\n        }\n\n        continue;\n\n      default:\n        continue;\n      }\n    }\n\n    if (indexFile) {\n      firstEntryPointPath = unixify(path.resolve(indexFile));\n      if (DEBUG >= 1) console.log('firstEntryPointPath', firstEntryPointPath);\n      entryStats = fs.lstatSync(firstEntryPointPath);\n    } else {\n      throw new Error(\n        `Could not find a default entry point file (index.md, index.html or README.md) in the entry point directory ${firstEntryPointPath} (${scanPath}`\n      );\n    }\n  }\n\n  if (!entryStats) {\n    throw new Error(`entry point does not exist: ${firstEntryPointPath}`);\n  }\n\n  if (!entryStats.isFile()) {\n    throw new Error(`entry point is not a file: ${firstEntryPointPath}`);\n  }\n\n  config.docTreeBasedir = path.dirname(firstEntryPointPath);\n\n\n  let outputDirPath = paths[1] || path.join(config.docTreeBasedir, (!config.docTreeBasedir.endsWith('docs') ? '../docs' : '../' + path.basename(config.docTreeBasedir) + '-output'));\n  // make sure we start with an absolute path; everything will derived off this one.\n  if (!path.isAbsolute(outputDirPath)) {\n    outputDirPath = path.join(process.cwd(), outputDirPath);\n  }\n  outputDirPath = unixify(path.normalize(outputDirPath));\n  if (DEBUG >= 1) console.log('outputDirPath = ', outputDirPath);\n  config.destinationPath = outputDirPath;\n\n  config.outputDirRelativePath = unixify(path.relative(config.docTreeBasedir, config.destinationPath));\n\n  if (DEBUG >= 1) console.log('config:', config);\n\n\n  // now scan the entire tree: collect potential files for comparison & treatment\n  //\n  // Produces an array of categories, which each are an array of file records,\n  // where each file record has this format:\n  //\n  // {\n  //   path,        -- full path to file\n  //   nameLC       -- lowercased filename\n  //   ext          -- lowercased filename extension\n  //   relativePath --  relative path to config.docTreeBasedir\n  // }\n  //\n  async function collectAllFiles() {\n    let scanPath = path.join(config.docTreeBasedir, '**/*');\n    scanPath = unixify(scanPath);\n    if (DEBUG >= 1) console.log('scanPath:', scanPath);\n\n    return new Promise((resolve, reject) => {\n      glob(scanPath, {\n        nosort: true,\n        nomount: true,\n        nounique: false,\n        nocase: true,     //<-- uncomment this one for total failure to find any files >:-((\n        nodir: true,\n        nobrace: false,\n        gitignore: true\n      }, function processGlobResults(err, files) {\n        if (err) {\n          reject(new Error(`glob scan error: ${err}`));\n          return;\n        }\n\n        if (DEBUG >= 1) console.log(`root point DIR --> scan: ${JSON.stringify(files, null, 2)}`);\n\n        let rv = {\n          markdown: new Map(),\n          html: new Map(),\n          css: new Map(),\n          js: new Map(),\n          image: new Map(),\n          movie: new Map(),\n          misc: new Map(),\n          _: new Map()\n        };\n        const rv_mapping_def = {\n          markdown: [\n            'md',\n            'markdown'\n          ],\n          html: [\n            'html',\n            'htm'\n          ],\n          js: [\n            'js',\n            'mjs',\n            'ejs',\n            'ts',\n            'coffee'\n          ],\n          css: [\n            'css',\n            'scss',\n            'less',\n            'styl',\n            'stylus'\n          ],\n          image: [\n            'png',\n            'gif',\n            'jpg',\n            'jpeg',\n            'tiff',\n            'bmp',\n            'svg',\n            'psd',\n            'ai'\n          ],\n          movie: [\n            'mkv',\n            'mp4',\n            'avi',\n            'mov',\n            'flv'\n          ]\n        };\n        let rv_mapping = new Map();\n        for (let n in rv_mapping_def) {\n          let a = rv_mapping_def[n];\n          if (DEBUG >= 4) console.log('key n', { n, a });\n          for (let b of a) {\n            if (DEBUG >= 4) console.log('map n -> b', { n, b });\n            rv_mapping.set('.' + b, n);\n          }\n        }\n\n        if (DEBUG >= 3) console.log('######################### mapping ##########################\\n', rv_mapping, '\\n###########################################');\n\n        for (const p of files || []) {\n          f = unixify(path.resolve(p));\n          if (DEBUG >= 9) console.log('hacky fix for glob output not being abs path on Windows:', { 'in': p, out: f });\n          let fname = path.basename(f.toLowerCase());\n          let ext = path.extname(fname);\n          let el = {\n            path: f,\n            nameLC: fname,\n            ext: ext,\n            relativePath: unixify(path.relative(config.docTreeBasedir, f))\n          };\n          let cat = rv_mapping.get(ext) || 'misc';\n          rv[cat].set(f, el);\n          rv._.set(f, el);\n        }\n        resolve(rv);\n      });\n    });\n  }\n\n  // async invocation, but don't wait for it yet:\n  let scan = collectAllFiles();\n\n  let md = MarkDown({\n    // Enable HTML tags in source\n    html: true,\n    // Use '/' to close single tags (<br />).\n    xhtmlOut: false,\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n    // CSS language prefix for fenced blocks. Can be useful for external highlighters.\n    langPrefix: 'language-',\n    // Autoconvert URL-like text to links\n    linkify: true,\n    // highSecurity:\n    // - false:           lower protection against XSS/Unicode-Homologue/etc. attacks via the input MarkDown.\n    //                    This setting assumes you own or at least trust the Markdown\n    //                    being fed to MarkDonw-It. The result is a nicer render.\n    // - true (default):  maximum protection against XSS/Unicode-Homologue/etc. attacks via the input MarkDown.\n    //                    This is the default setting and assumes you have no control or absolute trust in the Markdown\n    //                    being fed to MarkDonw-It. Use this setting when using markdown-it as part of a forum or other\n    //                    website where more-or-less arbitrary users can enter and feed any MarkDown to markdown-it.\n    //\n    // See https://en.wikipedia.org/wiki/Internationalized_domain_name for details on homograph attacks, for example.\n    highSecurity: false,\n    // Enable some language-neutral replacement + quotes beautification\n    typographer: true,\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '“”‘’',\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externally.\n    // If result starts with <pre... internal wrapper is skipped.\n    highlight: function () /*str, lang*/\n    {\n      console.error('highligh callback invoked!');\n      return '';\n    } // Configure default attributes for given tags\n    //default_attributes: { a: [['rel', 'nofollow']] }\n  });\n\n  // augment the md instance for use with the markdown_it_include plugin:\n  //md.getIncludeRootDir = ...\n\n  if (DEBUG >= 1) console.log('setting up markdown-it:', mdPluginCollective, typeof mdPluginCollective.use_dirty_dozen);\n  mdPluginCollective.use_dirty_dozen(md, {\n    abbr: {\n      abbreviations: readOptionalTxtConfigFile('.deGaulle/abbr-abbreviations.txt'),\n      links:         readOptionalTxtConfigFile('.deGaulle/abbr-links.txt'),\n      emphasis:      readOptionalTxtConfigFile('.deGaulle/abbr-emphasis-phrases.txt')\n    },\n\n    include: {\n      root: '/bogus/',\n      getRootDir: (options, state, startLine, endLine) => state.env.getIncludeRootDir(options, state, startLine, endLine)\n    },\n\n    wikilinks: {\n      postProcessPageName: function (pageName) {\n        let rv = myCustomPageNamePostprocessor(pageName);\n        if (DEBUG >= 1) console.log('wikilink transform:', { 'in': pageName, out: rv });\n        return rv;\n      }\n    }\n  });\n\n\n  let allFiles = await scan;\n  if (DEBUG >= 2) console.log('!!!!!!!!!!!!!!!! allFiles:', allFiles);\n\n  if (!allFiles.markdown.get(firstEntryPointPath) && !allFiles.html.get(firstEntryPointPath)) {\n    throw new Error(`root file '${firstEntryPointPath}' is supposed to be part of the website`);\n  }\n\n\n\n  console.log(`processing root file: ${firstEntryPointPath}...`);\n  let specRec = await compileMD(firstEntryPointPath, md, allFiles);\n\n  if (DEBUG >= 10) console.log('specRec:', specRec);\n\n  // now process the other MD files too:\n  for (let slot of allFiles.markdown) {\n    let key = slot[0];\n    let entry = slot[1];\n    entry.destinationRelPath = myCustomPageNamePostprocessor(entry.relativePath.slice(0, entry.relativePath.length - entry.ext.length));\n    if (DEBUG >= 5) console.log('!!!!!!!!!!!!!!!!!!!!!!!! markdown file record:', entry);\n\n    let specRec2 = await compileMD(key, md, allFiles);\n\n    if (DEBUG >= 3) console.log('specRec:', specRec2);\n    assert.strictEqual(specRec2, entry);\n  }\n\n  // now process the HTML files:\n  for (let slot of allFiles.html) {\n    let key = slot[0];\n    let entry = slot[1];\n    entry.destinationRelPath = myCustomPageNamePostprocessor(entry.relativePath.slice(0, entry.relativePath.length - entry.ext.length));\n    if (DEBUG >= 5) console.log('!!!!!!!!!!!!!!!!!!!!!!!! HTML file record:', entry);\n\n    let specRec2 = await loadHTML(key, allFiles);\n\n    if (DEBUG >= 3) console.log('specRec:', specRec2);\n    assert.strictEqual(specRec2, entry);\n  }\n\n  // now process the CSS, JS and other 'fixed assets' files:\n  //\n  // [css, js, image, movie, misc, _]\n  for (let type in allFiles) {\n    switch (type) {\n    case 'html':\n    case 'markdown':\n      continue;\n\n    case 'css':\n    case 'js':\n      for (let slot of allFiles[type]) {\n        let key = slot[0];\n        let entry = slot[1];\n        entry.destinationRelPath = myCustomPageNamePostprocessor(entry.relativePath.slice(0, entry.relativePath.length - entry.ext.length));\n        if (DEBUG >= 5) console.log(`!!!!!!!!!!!!!!!!!!!!!!!! Type [${type}] file record:`, entry);\n\n        let specRec2 = await loadFixedAssetTextFile(key, allFiles);\n\n        if (DEBUG >= 3) console.log('specRec:', specRec2);\n        assert.strictEqual(specRec2, entry);\n      }\n      continue;\n\n    default:\n      for (let slot of allFiles[type]) {\n        let key = slot[0];\n        let entry = slot[1];\n        entry.destinationRelPath = myCustomPageNamePostprocessor(entry.relativePath.slice(0, entry.relativePath.length - entry.ext.length));\n        if (DEBUG >= 5) console.log(`!!!!!!!!!!!!!!!!!!!!!!!! Type [${type}] file record:`, entry);\n\n        let specRec2 = await loadFixedAssetBinaryFile(key, allFiles);\n\n        if (DEBUG >= 3) console.log('specRec:', specRec2);\n        assert.strictEqual(specRec2, entry);\n      }\n      continue;\n    }\n  }\n\n  // now's the time to match the links in the generated content and do some linkage reporting alongside:\n  //\n  if (DEBUG >= 1) console.log('>>>>>>>>>>>>>>>>>>>> allFiles:', allFiles);\n  if (DEBUG >= 1) console.log('markdown AST token types:', Object.keys(markdownTokens).sort());\n\n\n\n\n\n\n\n}\n\n\n\nasync function compileMD(mdPath, md, allFiles) {\n  console.log(`processing file: ${mdPath}...`);\n\n  return new Promise((resolve, reject) => {\n    fs.readFile(\n      mdPath,\n      {\n        encoding: 'utf8'\n      },\n      async (err, data) => {\n        if (err) {\n          reject(new Error(\n            `ERROR: read error ${err} for file ${mdPath}`\n          ));\n          return;\n        }\n\n        let env = {};\n\n        if (DEBUG >= 8)          console.log('source:\\n', data);\n\n        // augment the md instance for use with the markdown_it_include plugin:\n        env.getIncludeRootDir = function (options, state, startLine, endLine) {\n          if (DEBUG >= 6)          console.log('##### include root dir is today:', { dir: path.dirname(mdPath) });\n          return path.dirname(mdPath);\n        };\n\n        // let content = md.render(data); --> .parse + .renderer.render\n        //\n        // .parse --> new state + process: return tokens\n        // let tokens = md.parse(data, env)\n        let state = new md.core.State(data, md, env);\n        md.core.process(state);\n        let tokens = state.tokens;\n\n        if (DEBUG >= 10) console.log('tokens:\\n', JSON.stringify(cleanTokensForDisplay(tokens), null, 2));\n\n        let typeMap = new Set();\n        traverseTokens(tokens, (t, idx, arr, depth) => {\n          typeMap.add(t.type);\n          markdownTokens[t.type] = true;\n        });\n        if (DEBUG >= 4) console.log('token types:', typeMap);\n\n        if (0) {\n          let position = 0;\n          let prevToken = null;\n          traverseTokens(tokens, (t, idx, arr, depth) => {\n            if (!Number.isFinite(t.position)) {\n              console.error('erroneous token position:', t);\n              return;\n            }\n            if (!Number.isFinite(t.size)) {\n              console.error('erroneous token size:', t);\n              return;\n            }\n            if (t.position >= position) {\n              position = t.position;\n            } else {\n              console.warn('token position is dropping back / reversing:', { position, t, prevToken });\n            }\n            prevToken = t;\n          });\n        }\n\n        let content = md.renderer.render(tokens, md.options, env);\n\n        if (DEBUG >= 4) console.log('output:\\n', content);\n\n        const dom = new JSDOM('<html><head>\\n' + content,\n          { includeNodeLocations: true }\n        );\n\n        const document = dom.window.document;\n        const bodyEl = document.body; // implicitly created\n        const headEl = document.querySelector('head');\n        if (DEBUG >= 1)          console.log('MARKDOWN:\\n', { html: document, body: bodyEl.innerHTML, head: headEl.innerHTML });\n\n        // update the file record:\n        let el = allFiles.markdown.get(mdPath);\n        if (DEBUG >= 3) console.log('update the file record:', { mdPath, el });\n        el.HtmlContent = content;\n        //el.HtmlContent = bodyEl.innerHTML;\n        el.HtmlHeadContent = headEl.innerHTML;\n        el.HtmlBody = bodyEl;\n        el.HtmlHead = headEl;\n\n        resolve(el);\n      }\n    );\n  });\n}\n\n\n\nasync function loadHTML(htmlPath, allFiles) {\n  console.log(`processing file: ${htmlPath}...`);\n\n  return new Promise((resolve, reject) => {\n    fs.readFile(\n      htmlPath,\n      {\n        encoding: 'utf8'\n      },\n      async (err, data) => {\n        if (err) {\n          reject(new Error(\n            `ERROR: read error ${err} for file ${htmlPath}`\n          ));\n          return;\n        }\n\n        if (DEBUG >= 1)          console.log('source:\\n', data);\n\n        const dom = new JSDOM(data,\n          { includeNodeLocations: true }\n        );\n\n        const document = dom.window.document;\n        const bodyEl = document.body; // implicitly created\n        const headEl = document.querySelector('head');\n        if (DEBUG >= 1)          console.log('HTML:\\n', { html: document, body: bodyEl.innerHTML, head: headEl.innerHTML });\n\n        // update the file record:\n        let el = allFiles.html.get(htmlPath);\n        el.HtmlContent = bodyEl.innerHTML;\n        el.HtmlHeadContent = headEl.innerHTML;\n        el.HtmlBody = bodyEl;\n        el.HtmlHead = headEl;\n\n        resolve(el);\n      }\n    );\n  });\n}\n\nasync function loadFixedAssetTextFile(filePath, allFiles) {\n  console.log(`processing file: ${filePath}...`);\n\n  return new Promise((resolve, reject) => {\n    fs.readFile(\n      htmlPath,\n      {\n        encoding: 'utf8'\n      },\n      async (err, data) => {\n        if (err) {\n          reject(new Error(\n            `ERROR: read error ${err} for file ${htmlPath}`\n          ));\n          return;\n        }\n\n        if (DEBUG >= 1)          console.log('source:\\n', data);\n\n        // update the file record:\n        el.RawContent = data;\n\n        resolve(el);\n      }\n    );\n  });\n}\n\nasync function loadFixedAssetBinaryFile(filePath, allFiles) {\n  console.log(`processing file: ${filePath}...`);\n\n  return new Promise((resolve, reject) => {\n    fs.readFile(\n      htmlPath,\n      {\n        encoding: 'utf8'\n      },\n      async (err, data) => {\n        if (err) {\n          reject(new Error(\n            `ERROR: read error ${err} for file ${htmlPath}`\n          ));\n          return;\n        }\n\n        if (DEBUG >= 1)          console.log('source:\\n', data);\n\n        // update the file record:\n\n        resolve(el);\n      }\n    );\n  });\n}\n\n\nfunction cleanTokensForDisplay(tokens) {\n  let rv = [];\n  for (let i in tokens) {\n    let t = tokens[i];\n    t = cleanSingleTokenForDisplay(t);\n    if (t.children) {\n      t.children = cleanTokensForDisplay(t.children);\n    }\n    rv[i] = t;\n  }\n  return rv;\n}\n\nfunction cleanSingleTokenForDisplay(token) {\n  let rv = {};\n  for (let attr in token) {\n    if (token[attr] !== '' && token[attr] != null) {\n      rv[attr] = token[attr];\n    }\n  }\n  return rv;\n}\n\n// https://vuepress.vuejs.org/plugin/life-cycle.html#generated\nasync function mdGenerated(pagePaths) {\n  // cp docs-src/.nojekyll docs/ && cp docs-src/CNAME docs/\n  console.error('async generated HIT');\n\n  fs.writeFileSync(absDstPath('CNAME'), 'qiqqa.org\\n', 'utf8');\n\n  fs.writeFileSync(absDstPath('.nojekyll'), '');\n}\n\nfunction traverseTokens(tokens, cb, depth) {\n  depth = depth || 0;\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    let t = tokens[i];\n    cb(t, i, tokens, depth);\n\n    if (t.children) {\n      traverseTokens(t.children, cb, depth + 1);\n    }\n  }\n}\n"],"names":["Symbol","iterator","_settle","pact","state","value","s","_Pact","v","o","bind","then","observer","prototype","onFulfilled","onRejected","result","callback","e","_this","_isSettledPact","thenable","_forTo","array","body","check","i","reject","_cycle","length","_forOf","target","_iteratorSymbol","step","next","done","return","_fixup","TypeError","values","push","loadFixedAssetBinaryFile","filePath","allFiles","console","log","Promise","resolve","fs","readFile","htmlPath","encoding","err","data","Error","DEBUG","el","_switch","discriminant","cases","dispatchIndex","awaitBody","outer","test","testValue","fallthroughCheck","_resumeAfterBody","_resumeAfterTest","loadFixedAssetTextFile","RawContent","_forIn","keys","key","loadHTML","dom","JSDOM","includeNodeLocations","document","window","bodyEl","headEl","querySelector","html","innerHTML","head","get","HtmlContent","HtmlHeadContent","HtmlBody","HtmlHead","compileMD","mdPath","md","env","getIncludeRootDir","options","startLine","endLine","dir","path","dirname","core","State","process","tokens","JSON","stringify","cleanTokensForDisplay","typeMap","Set","traverseTokens","t","idx","arr","depth","add","type","markdownTokens","position","prevToken","Number","isFinite","error","size","warn","content","renderer","render","markdown","buildWebsite","opts","command","collectAllFiles","scanPath","join","config","docTreeBasedir","unixify","glob","nosort","nomount","nounique","nocase","nodir","nobrace","gitignore","processGlobResults","files","rv","Map","css","js","image","movie","misc","_","rv_mapping_def","rv_mapping","n","a","b","set","p","f","out","fname","basename","toLowerCase","ext","extname","nameLC","relativePath","relative","cat","Math","max","debug","paths","slice","minPathsCount","firstEntryPointPath","isAbsolute","cwd","normalize","entryStats","lstatSync","isDirectory","indexFile","indexFilePriority","sync","isFile","outputDirPath","endsWith","destinationPath","outputDirRelativePath","scan","MarkDown","xhtmlOut","breaks","langPrefix","linkify","highSecurity","typographer","quotes","highlight","mdPluginCollective","use_dirty_dozen","abbr","abbreviations","readOptionalTxtConfigFile","links","emphasis","include","root","getRootDir","wikilinks","postProcessPageName","pageName","myCustomPageNamePostprocessor","specRec","Object","sort","slot","entry","destinationRelPath","specRec2","assert","strictEqual","nomnom","require","pkg","jsdom","gitignoreParser","script","option","flag","help","cmd","ex","message","exit","sanityCheck","nocommand","version","parse","replace","absSrcPath","rel","existsSync","src","readFileSync","lines","split","filter","l","trim","includes","map","parts","forEach","spec","deburr","cleanSingleTokenForDisplay","children","token","attr","cb","len"],"mappings":"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"}