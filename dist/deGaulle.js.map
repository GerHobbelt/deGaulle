{"version":3,"file":"deGaulle.js","sources":["../src/index.js"],"sourcesContent":["//\n//\n//\nconst nomnom = require('@gerhobbelt/nomnom');\n\nconst MarkDown = require('@gerhobbelt/markdown-it');\n\nconst mdPluginCollective = require('markdown-it-dirty-dozen');\n\nconst pkg = require('../package.json');\n\nconst glob = require('globby');\n\nconst path = require('path');\nconst fs = require('fs');\n\n\nconst config = {\n  docTreeBasedir: null,\n  destinationPath: null\n};\n\nnomnom.script('deGaulle');\n\nnomnom\n  .command('build')\n  .option('debug', {\n    abbr: 'd',\n    flag: true,\n    help: 'Print debugging info'\n  })\n  .option('config', {\n    abbr: 'c',\n    'default': 'config.json',\n    help: 'JSON file with tests to run'\n  })\n  .callback(function (opts, cmd) {\n    try {\n      buildWebsite(opts, cmd);\n    } catch (ex) {\n      console.error(`ERROR: ${ex.message}\\n\\nException:\\n${ex}`);\n      process.exit(5);\n    }\n  })\n  .help('build website from sources');\n\nnomnom\n  .command('sanity')\n  .option('debug', {\n    abbr: 'd',\n    flag: true,\n    help: 'Print debugging info'\n  })\n  .option('config', {\n    abbr: 'c',\n    'default': 'config.json',\n    help: 'JSON file with tests to run'\n  })\n  .option('outfile', {\n    abbr: 'o',\n    help: 'file to write results to'\n  })\n  .callback(function (\n    opts\n    /* , cmd */\n  ) {\n    try {\n      sanityCheck(opts);\n    } catch (ex) {\n      console.error(`ERROR: ${ex.message}\\n\\nException:\\n${ex}`);\n      process.exit(5);\n    }\n  })\n  .help('run the sanity tests');\n\nnomnom\n  .nocommand()\n  .option('debug', {\n    abbr: 'd',\n    flag: true,\n    help: 'Print debugging info'\n  })\n  .option('config', {\n    abbr: 'c',\n    'default': 'config.json',\n    help: 'JSON file with tests to run'\n  })\n  .option('version', {\n    flag: true,\n    help: 'print version and exit',\n    callback: function () {\n      return `version ${pkg.version}`;\n    }\n  })\n  .callback(function (opts, cmd) {\n    try {\n      buildWebsite(opts, cmd);\n    } catch (ex) {\n      console.error(`ERROR: ${ex.message}\\n\\nException:\\n${ex}`);\n      process.exit(5);\n    }\n  });\n\nnomnom.parse();\n\n\n\n// -- done --\n\n\n\nfunction absSrcPath(rel) {\n  let p = path.join(config.docTreeBasedir, rel);\n  return path.resolve(p);\n}\n\nfunction absDstPath(rel) {\n  if (!config.destinationPath) {\n    config.destinationPath = absSrcPath('../docs/');\n  }\n  let p = path.join(config.destinationPath, rel);\n  return path.resolve(p);\n}\n\nfunction readTxtConfigFile(rel) {\n  let p = path.resolve(absSrcPath(rel));\n  let src = fs.readFileSync(p, 'utf8');\n  // - split into lines\n  // - filter out any lines whicch don't have an '='\n  // - split each line across the initial '=' in there.\n  // - turn this into a hash table?\n  let lines = src.split(/[\\r\\n]/g);\n  lines = lines.filter((l) => l.trim().length > 1 && l.includes('=')).map((l) => {\n    let parts = l.split('=');\n    if (parts.length !== 2) {\n      throw new Error(`config line in ${rel} is expected to have only one '='`);\n    }\n    parts = parts.map((l) => l.trim());\n    return parts;\n  });\n  let rv = {};\n  lines.forEach((l) => {\n    rv[l[0]] = l[1];\n  });\n  return rv;\n}\n\nfunction buildWebsite(opts, command) {\n  console.log(\n    `buildWebsite: command: ${command || '<no-command>'}, opts: ${JSON.stringify(\n      opts,\n      null,\n      2\n    )}`\n  );\n  let paths = opts._.slice(command ? 1 : 0);\n  const minPathsCount = 1;\n\n  if (!paths || paths.length < minPathsCount) {\n    throw new Error(\n      'Must specify at least one file path as starting point. None were specified.'\n    );\n  }\n\n  let firstEntryPointPath = paths[0];\n  // make sure we start with an absolute path; everything will derived off this one.\n  if (!path.isAbsolute(firstEntryPointPath)) {\n    firstEntryPointPath = path.join(process.cwd(), firstEntryPointPath);\n  }\n  firstEntryPointPath = path.normalize(firstEntryPointPath);\n  console.log('firstEntryPointPath = ', firstEntryPointPath);\n\n  let entryStats = fs.lstatSync(firstEntryPointPath);\n\n  if (entryStats && entryStats.isDirectory()) {\n    // check if any of the default entry points exist:\n    // - index.md\n    // - index.html\n    // - README.md\n    let indexFile;\n    let indexFilePriority = 0;\n    let scanPath = path.join(firstEntryPointPath, '*.{md,htm,html}');\n    scanPath = scanPath.replace(/\\\\/g, '/');\n    console.log('scanPath:', scanPath);\n    let files = glob.sync(scanPath, {\n      nosort: true,\n      nocase: true,\n      nodir: true,\n      nobrace: false\n    });\n    console.log(`root point DIR --> scan: ${JSON.stringify(files, null, 2)}`);\n\n    for (const f of files || []) {\n      switch (path.basename(f.toLowerCase())) {\n      case 'index.md':\n        if (indexFilePriority < 10) {\n          indexFilePriority = 10;\n          indexFile = f;\n        }\n\n        continue;\n\n      case 'index.htm':\n      case 'index.html':\n        if (indexFilePriority < 5) {\n          indexFilePriority = 5;\n          indexFile = f;\n        }\n\n        continue;\n\n      case 'readme.md':\n        if (indexFilePriority < 1) {\n          indexFilePriority = 1;\n          indexFile = f;\n        }\n\n        continue;\n\n      default:\n        continue;\n      }\n    }\n\n    if (indexFile) {\n      firstEntryPointPath = indexFile;\n      entryStats = fs.lstatSync(firstEntryPointPath);\n    } else {\n      throw new Error(\n        `Could not find a default entry point file (index.md, index.html or README.md) in the entry point directory ${firstEntryPointPath} (${scanPath}`\n      );\n    }\n  }\n\n  if (!entryStats) {\n    throw new Error(`entry point does not exist: ${firstEntryPointPath}`);\n  }\n\n  if (!entryStats.isFile()) {\n    throw new Error(`entry point is not a file: ${firstEntryPointPath}`);\n  }\n\n  config.docTreeBasedir = path.dirname(firstEntryPointPath);\n  console.log('config:', config);\n\n  let md = MarkDown({\n    // Enable HTML tags in source\n    html: true,\n    // Use '/' to close single tags (<br />).\n    xhtmlOut: false,\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n    // CSS language prefix for fenced blocks. Can be useful for external highlighters.\n    langPrefix: 'language-',\n    // Autoconvert URL-like text to links\n    linkify: true,\n    // highSecurity:\n    // - false:           lower protection against XSS/Unicode-Homologue/etc. attacks via the input MarkDown.\n    //                    This setting assumes you own or at least trust the Markdown\n    //                    being fed to MarkDonw-It. The result is a nicer render.\n    // - true (default):  maximum protection against XSS/Unicode-Homologue/etc. attacks via the input MarkDown.\n    //                    This is the default setting and assumes you have no control or absolute trust in the Markdown\n    //                    being fed to MarkDonw-It. Use this setting when using markdown-it as part of a forum or other\n    //                    website where more-or-less arbitrary users can enter and feed any MarkDown to markdown-it.\n    //\n    // See https://en.wikipedia.org/wiki/Internationalized_domain_name for details on homograph attacks, for example.\n    highSecurity: false,\n    // Enable some language-neutral replacement + quotes beautification\n    typographer: true,\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '“”‘’',\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externally.\n    // If result starts with <pre... internal wrapper is skipped.\n    highlight: function () /*str, lang*/\n    {\n      console.error('highligh callback invoked!');\n      return '';\n    } // Configure default attributes for given tags\n    //default_attributes: { a: [['rel', 'nofollow']] }\n  });\n\n  console.log('setting up markdown-it:', mdPluginCollective, typeof mdPluginCollective.use_dirty_dozen);\n  mdPluginCollective.use_dirty_dozen(md, {\n    abbr: {\n      abbreviations: readTxtConfigFile('.deGaulle/abbr-abbreviations.txt'),\n      links:         readTxtConfigFile('.deGaulle/abbr-links.txt'),\n      emphasis:      readTxtConfigFile('.deGaulle/abbr-emphasis-phrases.txt')\n    },\n\n    include: {\n      root: absSrcPath('.')\n    }\n  });\n\n  console.log(`processing root file: ${firstEntryPointPath}...`);\n  fs.readFile(\n    firstEntryPointPath,\n    {\n      encoding: 'utf8'\n    },\n    (err, data) => {\n      if (err) {\n        throw new Error(\n          `ERROR: read error ${err} for file ${firstEntryPointPath}`\n        );\n      }\n\n      let env = {};\n\n      console.log('source:\\n', data);\n\n      // let content = md.render(data); --> .parse + .renderer.render\n      //\n      // .parse --> new state + process: return tokens\n      // let tokens = md.parse(data, env)\n      let state = new md.core.State(data, md, env);\n      md.core.process(state);\n      let tokens = state.tokens;\n\n      console.log('tokens:\\n', JSON.stringify(cleanTokensForDisplay(tokens), null, 2));\n\n      let content = md.renderer.render(tokens, md.options, env);\n\n      console.log('output:\\n', content);\n\n\n    }\n  );\n}\n\nfunction cleanTokensForDisplay(tokens) {\n  let rv = [];\n  for (let i in tokens) {\n    let t = tokens[i];\n    t = cleanSingleTokenForDisplay(t);\n    if (t.children) {\n      t.children = cleanTokensForDisplay(t.children);\n    }\n    rv[i] = t;\n  }\n  return rv;\n}\n\nfunction cleanSingleTokenForDisplay(token) {\n  let rv = {};\n  for (let attr in token) {\n    if (token[attr] !== '' && token[attr] != null) {\n      rv[attr] = token[attr];\n    }\n  }\n  return rv;\n}\n\n// https://vuepress.vuejs.org/plugin/life-cycle.html#generated\nasync function mdGenerated(pagePaths) {\n  // cp docs-src/.nojekyll docs/ && cp docs-src/CNAME docs/\n  console.error('async generated HIT');\n\n  fs.writeFileSync(absDstPath('CNAME'), 'qiqqa.org\\n', 'utf8');\n\n  fs.writeFileSync(absDstPath('.nojekyll'), '');\n}\n"],"names":["nomnom","require","MarkDown","mdPluginCollective","pkg","glob","path","fs","config","docTreeBasedir","destinationPath","script","command","option","abbr","flag","help","callback","opts","cmd","buildWebsite","ex","console","error","message","process","exit","sanityCheck","nocommand","version","parse","absSrcPath","rel","p","join","resolve","readTxtConfigFile","src","readFileSync","lines","split","filter","l","trim","length","includes","map","parts","Error","rv","forEach","log","JSON","stringify","paths","_","slice","minPathsCount","firstEntryPointPath","isAbsolute","cwd","normalize","entryStats","lstatSync","isDirectory","indexFile","indexFilePriority","scanPath","replace","files","sync","nosort","nocase","nodir","nobrace","f","basename","toLowerCase","isFile","dirname","md","html","xhtmlOut","breaks","langPrefix","linkify","highSecurity","typographer","quotes","highlight","use_dirty_dozen","abbreviations","links","emphasis","include","root","readFile","encoding","err","data","env","state","core","State","tokens","cleanTokensForDisplay","content","renderer","render","options","i","t","cleanSingleTokenForDisplay","children","token","attr"],"mappings":"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"}