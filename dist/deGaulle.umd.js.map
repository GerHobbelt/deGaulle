{"version":3,"file":"deGaulle.umd.js","sources":["../src/index.js"],"sourcesContent":["//\n//\n//\nconst nomnom = require('@gerhobbelt/nomnom');\n\nconst MarkDown = require('@gerhobbelt/markdown-it');\n\nconst mdPluginCollective = require('markdown-it-dirty-dozen');\n\nconst pkg = require('../package.json');\n\nconst glob = require('glob');\n\nconst path = require('path');\nconst fs = require('fs');\n\nnomnom.script('deGaulle');\n\nnomnom\n  .command('build')\n  .option('debug', {\n    abbr: 'd',\n    flag: true,\n    help: 'Print debugging info'\n  })\n  .option('config', {\n    abbr: 'c',\n    'default': 'config.json',\n    help: 'JSON file with tests to run'\n  })\n  .callback(function (opts, cmd) {\n    try {\n      buildWebsite(opts, cmd);\n    } catch (ex) {\n      console.error(`ERROR: ${ex.message}\\n\\nException:\\n${ex}`);\n      process.exit(5);\n    }\n  })\n  .help('build website from sources');\n\nnomnom\n  .command('sanity')\n  .option('debug', {\n    abbr: 'd',\n    flag: true,\n    help: 'Print debugging info'\n  })\n  .option('config', {\n    abbr: 'c',\n    'default': 'config.json',\n    help: 'JSON file with tests to run'\n  })\n  .option('outfile', {\n    abbr: 'o',\n    help: 'file to write results to'\n  })\n  .callback(function (\n    opts\n    /* , cmd */\n  ) {\n    try {\n      sanityCheck(opts);\n    } catch (ex) {\n      console.error(`ERROR: ${ex.message}\\n\\nException:\\n${ex}`);\n      process.exit(5);\n    }\n  })\n  .help('run the sanity tests');\n\nnomnom\n  .nocommand()\n  .option('debug', {\n    abbr: 'd',\n    flag: true,\n    help: 'Print debugging info'\n  })\n  .option('config', {\n    abbr: 'c',\n    'default': 'config.json',\n    help: 'JSON file with tests to run'\n  })\n  .option('version', {\n    flag: true,\n    help: 'print version and exit',\n    callback: function () {\n      return `version ${pkg.version}`;\n    }\n  })\n  .callback(function (opts, cmd) {\n    try {\n      buildWebsite(opts, cmd);\n    } catch (ex) {\n      console.error(`ERROR: ${ex.message}\\n\\nException:\\n${ex}`);\n      process.exit(5);\n    }\n  });\n\nnomnom.parse();\n\n\n\n// -- done --\n\n\n\nfunction absSrcPath(rel) {\n  let p = path.join(__dirname, '..', rel);\n  return path.resolve(p);\n}\n\nconst destinationPath = absSrcPath('../docs/');\n\nfunction absDstPath(rel) {\n  let p = path.join(destinationPath, rel);\n  return path.resolve(p);\n}\n\nfunction readTxtConfigFile(rel) {\n  let p = path.resolve(absSrcPath(rel));\n  let src = fs.readFileSync(p, 'utf8');\n  // - split into lines\n  // - filter out any lines whicch don't have an '='\n  // - split each line across the initial '=' in there.\n  // - turn this into a hash table?\n  let lines = src.split(/[\\r\\n]/g);\n  lines = lines.filter((l) => l.trim().length > 1 && l.includes('=')).map((l) => {\n    let parts = l.split('=');\n    if (parts.length !== 2) {\n      throw new Error(`config line in ${rel} is expected to have only one '='`);\n    }\n    parts = parts.map((l) => l.trim());\n    return parts;\n  });\n  let rv = {};\n  lines.forEach((l) => {\n    rv[l[0]] = l[1];\n  });\n  return rv;\n}\n\nfunction buildWebsite(opts, command) {\n  console.log(\n    `buildWebsite: command: ${command || '<no-command>'}, opts: ${JSON.stringify(\n      opts,\n      null,\n      2\n    )}`\n  );\n  let paths = opts._.slice(command ? 1 : 0);\n  const minPathsCount = 1;\n\n  if (!paths || paths.length < minPathsCount) {\n    throw new Error(\n      'Must specify at least one file path as starting point. None were specified.'\n    );\n  }\n\n  let firstEntryPointPath = paths[0];\n  let entryStats = fs.lstatSync(firstEntryPointPath);\n\n  if (entryStats && entryStats.isDirectory()) {\n    // check if any of the default entry points exist:\n    // - index.md\n    // - index.html\n    // - README.md\n    let indexFile;\n    let indexFilePriority = 0;\n    let scanPath = firstEntryPointPath + '/*.{md,htm,html}';\n    let files = glob.sync(scanPath, {\n      nosort: true,\n      nocase: true,\n      nodir: true,\n      nobrace: false\n    });\n    console.log(`root point DIR --> scan: ${JSON.stringify(files, null, 2)}`);\n\n    for (const f of files || []) {\n      switch (path.basename(f.toLowerCase())) {\n      case 'index.md':\n        if (indexFilePriority < 10) {\n          indexFilePriority = 10;\n          indexFile = f;\n        }\n\n        continue;\n\n      case 'index.htm':\n      case 'index.html':\n        if (indexFilePriority < 5) {\n          indexFilePriority = 5;\n          indexFile = f;\n        }\n\n        continue;\n\n      case 'readme.md':\n        if (indexFilePriority < 1) {\n          indexFilePriority = 1;\n          indexFile = f;\n        }\n\n        continue;\n\n      default:\n        continue;\n      }\n    }\n\n    if (indexFile) {\n      firstEntryPointPath = indexFile;\n      entryStats = fs.lstatSync(firstEntryPointPath);\n    } else {\n      throw new Error(\n        `Could not find a default entry point file (index.md, index.html or README.md) in the entry point directory ${firstEntryPointPath} (${scanPath}`\n      );\n    }\n  }\n\n  if (!entryStats) {\n    throw new Error(`entry point does not exist: ${firstEntryPointPath}`);\n  }\n\n  if (!entryStats.isFile()) {\n    throw new Error(`entry point is not a file: ${firstEntryPointPath}`);\n  }\n\n  let md = MarkDown({\n    // Enable HTML tags in source\n    html: true,\n    // Use '/' to close single tags (<br />).\n    xhtmlOut: false,\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n    // CSS language prefix for fenced blocks. Can be useful for external highlighters.\n    langPrefix: 'language-',\n    // Autoconvert URL-like text to links\n    linkify: true,\n    // highSecurity:\n    // - false:           lower protection against XSS/Unicode-Homologue/etc. attacks via the input MarkDown.\n    //                    This setting assumes you own or at least trust the Markdown\n    //                    being fed to MarkDonw-It. The result is a nicer render.\n    // - true (default):  maximum protection against XSS/Unicode-Homologue/etc. attacks via the input MarkDown.\n    //                    This is the default setting and assumes you have no control or absolute trust in the Markdown\n    //                    being fed to MarkDonw-It. Use this setting when using markdown-it as part of a forum or other\n    //                    website where more-or-less arbitrary users can enter and feed any MarkDown to markdown-it.\n    //\n    // See https://en.wikipedia.org/wiki/Internationalized_domain_name for details on homograph attacks, for example.\n    highSecurity: false,\n    // Enable some language-neutral replacement + quotes beautification\n    typographer: true,\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '“”‘’',\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externally.\n    // If result starts with <pre... internal wrapper is skipped.\n    highlight: function () /*str, lang*/\n    {\n      console.error('highligh callback invoked!');\n      return '';\n    } // Configure default attributes for given tags\n    //default_attributes: { a: [['rel', 'nofollow']] }\n  });\n\n  mdPluginCollective(md, {\n    abbr: {\n      abbreviations: readTxtConfigFile('.deGaulle/abbr-abbreviations.txt'),\n      links:         readTxtConfigFile('.deGaulle/abbr-links.txt'),\n      emphasis:      readTxtConfigFile('.deGaulle/abbr-emphasis-phrases.txt')\n    },\n\n    include: {\n      root: absSrcPath('.')\n    },\n\n    wikilinks: true\n  });\n\n  console.log(`processing root file: ${firstEntryPointPath}...`);\n  fs.readFile(\n    firstEntryPointPath,\n    {\n      encoding: 'utf8'\n    },\n    (err, data) => {\n      if (err) {\n        throw new Error(\n          `ERROR: read error ${err} for file ${firstEntryPointPath}`\n        );\n      }\n\n      let env = {};\n\n      console.log('source:\\n', data);\n\n      // let content = md.render(data); --> .parse + .renderer.render\n      //\n      // .parse --> new state + process: return tokens\n      // let tokens = md.parse(data, env)\n      let state = new md.core.State(data, md, env);\n      md.core.process(state);\n      let tokens = state.tokens;\n\n      console.log('tokens:\\n', JSON.stringify(cleanTokensForDisplay(tokens), null, 2));\n\n      let content = md.renderer.render(tokens, md.options, env);\n\n      console.log('output:\\n', content);\n\n\n    }\n  );\n}\n\nfunction cleanTokensForDisplay(tokens) {\n  let rv = [];\n  for (let i in tokens) {\n    let t = tokens[i];\n    t = cleanSingleTokenForDisplay(t);\n    if (t.children) {\n      t.children = cleanTokensForDisplay(t.children);\n    }\n    rv[i] = t;\n  }\n  return rv;\n}\n\nfunction cleanSingleTokenForDisplay(token) {\n  let rv = {};\n  for (let attr in token) {\n    if (token[attr] !== '' && token[attr] != null) {\n      rv[attr] = token[attr];\n    }\n  }\n  return rv;\n}\n\n// https://vuepress.vuejs.org/plugin/life-cycle.html#generated\nasync function mdGenerated(pagePaths) {\n  // cp docs-src/.nojekyll docs/ && cp docs-src/CNAME docs/\n  console.error('async generated HIT');\n\n  fs.writeFileSync(absDstPath('CNAME'), 'qiqqa.org\\n', 'utf8');\n\n  fs.writeFileSync(absDstPath('.nojekyll'), '');\n}\n"],"names":["nomnom","require","MarkDown","mdPluginCollective","pkg","glob","path","fs","script","command","option","abbr","flag","help","callback","opts","cmd","buildWebsite","ex","console","error","message","process","exit","sanityCheck","nocommand","version","parse","absSrcPath","rel","p","join","__dirname","resolve","destinationPath","readTxtConfigFile","src","readFileSync","lines","split","filter","l","trim","length","includes","map","parts","Error","rv","forEach","log","JSON","stringify","paths","_","slice","minPathsCount","firstEntryPointPath","entryStats","lstatSync","isDirectory","indexFile","indexFilePriority","scanPath","files","sync","nosort","nocase","nodir","nobrace","f","basename","toLowerCase","isFile","md","html","xhtmlOut","breaks","langPrefix","linkify","highSecurity","typographer","quotes","highlight","abbreviations","links","emphasis","include","root","wikilinks","readFile","encoding","err","data","env","state","core","State","tokens","cleanTokensForDisplay","content","renderer","render","options","i","t","cleanSingleTokenForDisplay","children","token","attr"],"mappings":"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"}