{"version":3,"file":"deGaulle.umd.js","sources":["../src/index.ts"],"sourcesContent":["//\n//\n//\nconst nomnom = require('@gerhobbelt/nomnom');\n\nconst MarkDown = require('@gerhobbelt/markdown-it');\n\nconst mdPluginCollective = require('markdown-it-dirty-dozen');\n\nconst pkg = require('../package.json');\n\nconst jsdom = require('jsdom');\nconst { JSDOM } = jsdom;\nconst glob = require('@gerhobbelt/glob');\nconst gitignoreParser = require('@gerhobbelt/gitignore-parser');\nconst assert = require('assert');\nconst _ = require('lodash');\n\nconst path = require('path');\nconst fs = require('fs');\n\nlet DEBUG = 1;\n\nconst markdownTokens = {};\n\ninterface ResultFileRecord {\n  path: string;\n  nameLC: string;\n  ext: string;\n  relativePath: string;\n  destinationRelPath: string;\n}\ninterface ResultHtmlFileRecord extends ResultFileRecord {\n  HtmlContent: string;\n  HtmlHeadContent: string;\n  HtmlBody: any;\n  HtmlHead: any;\n}\ntype ResultTextAssetFileRecord = ResultFileRecord\ntype ResultBinaryAssetFileRecord = ResultFileRecord\ninterface ResultsCollection {\n  markdown: Map<string, ResultHtmlFileRecord>;\n  html: Map<string, ResultHtmlFileRecord>;\n  css: Map<string, ResultTextAssetFileRecord>;\n  js: Map<string, ResultTextAssetFileRecord>;\n  image: Map<string, ResultBinaryAssetFileRecord>;\n  movie: Map<string, ResultBinaryAssetFileRecord>;\n  misc: Map<string, ResultBinaryAssetFileRecord>;\n  _: Map<string, ResultBinaryAssetFileRecord>;\n}\ninterface ConfigRecord {\n  docTreeBasedir: string;\n  destinationPath: string;\n  outputDirRelativePath: string;\n}\n\nconst config: ConfigRecord = {\n  docTreeBasedir: null,\n  destinationPath: null,\n  outputDirRelativePath: null\n};\n\ntype getIncludeRootDirFn = (options: any, state: any, startLine: number, endLine: number) => string;\ninterface MarkdownItEnvironment {\n  getIncludeRootDir: getIncludeRootDirFn;\n}\n\nnomnom.script('deGaulle');\n\nnomnom\n  .command('build')\n  .option('debug', {\n    abbr: 'd',\n    flag: false,\n    help: 'Print debugging info'\n  })\n  .option('config', {\n    abbr: 'c',\n    'default': 'config.json',\n    help: 'JSON file with tests to run'\n  })\n  .callback(function (opts, cmd) {\n    try {\n      buildWebsite(opts, cmd);\n    } catch (ex) {\n      console.error(`ERROR: ${ex.message}\\n\\nException:\\n${ex}`);\n      process.exit(5);\n    }\n  })\n  .help('build website from sources');\n\nnomnom\n  .command('sanity')\n  .option('debug', {\n    abbr: 'd',\n    flag: false,\n    help: 'Print debugging info'\n  })\n  .option('config', {\n    abbr: 'c',\n    'default': 'config.json',\n    help: 'JSON file with tests to run'\n  })\n  .option('outfile', {\n    abbr: 'o',\n    help: 'file to write results to'\n  })\n  .callback(function (opts, cmd) {\n    try {\n      sanityCheck(opts, cmd);\n    } catch (ex) {\n      console.error(`ERROR: ${ex.message}\\n\\nException:\\n${ex}`);\n      process.exit(5);\n    }\n  })\n  .help('run the sanity tests');\n\nnomnom\n  .nocommand()\n  .option('debug', {\n    abbr: 'd',\n    flag: false,\n    help: 'Print debugging info'\n  })\n  .option('config', {\n    abbr: 'c',\n    'default': 'config.json',\n    help: 'JSON file with tests to run'\n  })\n  .option('version', {\n    flag: true,\n    help: 'print version and exit',\n    callback: function () {\n      return `version ${pkg.version}`;\n    }\n  })\n  .callback(function (opts, cmd) {\n    try {\n      buildWebsite(opts, cmd);\n    } catch (ex) {\n      console.error(`ERROR: ${ex.message}\\n\\nException:\\n${ex}`);\n      process.exit(5);\n    }\n  });\n\nnomnom.parse();\n\n\n\n// -- done --\n\n\n\nfunction unixify(path) {\n  return path.replace(/\\\\/g, '/');\n}\n\nfunction absSrcPath(rel) {\n  const p = path.join(config.docTreeBasedir, rel);\n  return unixify(path.resolve(p));\n}\n\nfunction absDstPath(rel) {\n  if (!config.destinationPath) {\n    throw new Error('Internal error: used too early');\n  }\n  const p = path.join(config.destinationPath, rel);\n  return unixify(path.resolve(p));\n}\n\nfunction readOptionalTxtConfigFile(rel) {\n  const p = absSrcPath(rel);\n  if (fs.existsSync(p)) {\n    const src = fs.readFileSync(p, 'utf8');\n  // - split into lines\n  // - filter out any lines whicch don't have an '='\n  // - split each line across the initial '=' in there.\n  // - turn this into a hash table?\n    let lines = src.split(/[\\r\\n]/g);\n    lines = lines.filter((l) => l.trim().length > 1 && l.includes('=')).map((l) => {\n      let parts = l.split('=');\n      if (parts.length !== 2) {\n        throw new Error(`config line in ${rel} is expected to have only one '='`);\n      }\n      parts = parts.map((l) => l.trim());\n      return parts;\n    });\n    const rv = {};\n    lines.forEach((l) => {\n      rv[l[0]] = l[1];\n    });\n    return rv;\n  }\n  return {};\n}\n\nfunction myCustomPageNamePostprocessor(spec) {\n  // clean up unwanted characters\n  spec = spec.replace(/ :: /g, '/');\n  spec = spec.replace(/ --* /g, '/');\n  spec = _.deburr(spec).trim();\n  // normalize case\n  spec = spec.toLowerCase();\n  spec = spec\n      .replace(/[^\\w\\d\\s\\/_-]/g, '_');\n  spec = spec\n      .replace(/__+/g, '_');\n  spec = spec\n      .replace(/\\s+/g, ' ');\n  if (DEBUG >= 7) console.log('myCustomPageNamePostprocessor STAGE 1', spec);\n  spec = spec\n      .replace(/_-_/g, '_');\n  spec = spec\n      .replace(/ - /g, ' ');\n  spec = spec\n      .replace(/[ _]* [ _]*/g, ' ');\n  if (DEBUG >= 7) console.log('myCustomPageNamePostprocessor STAGE 2', spec);\n  spec = spec\n      .replace(/(^|\\/)[ _]+/g, '$1');\n  spec = spec\n      .replace(/[ _]+($|\\/)/g, '$1');\n  if (DEBUG >= 7) console.log('myCustomPageNamePostprocessor STAGE 3', spec);\n  spec = spec\n      .replace(/ /g, '_');\n  if (DEBUG >= 7) console.log('myCustomPageNamePostprocessor STAGE 4', spec);\n\n\n  return spec;\n}\n\nasync function sanityCheck(opts, command) {\n  console.log(\n    `sanityCheck: command: ${command || '<no-command>'}, opts: ${JSON.stringify(\n      opts,\n      null,\n      2\n    )}`\n  );\n\n  DEBUG = Math.max(DEBUG, Number.isFinite(+opts.debug) ? +opts.debug : opts.debug ? 1 : 0);\n  console.log('DEBUG = ', DEBUG);\n\n  return new Promise((resolve, reject) => {\n    resolve();\n  });\n}\n\n\nasync function buildWebsite(opts, command) {\n  console.log(\n    `buildWebsite: command: ${command || '<no-command>'}, opts: ${JSON.stringify(\n      opts,\n      null,\n      2\n    )}`\n  );\n\n  DEBUG = Math.max(DEBUG, Number.isFinite(+opts.debug) ? +opts.debug : opts.debug ? 1 : 0);\n  console.log('DEBUG = ', DEBUG);\n\n  const paths = opts._.slice(command ? 1 : 0);\n  const minPathsCount = 1;\n\n  if (!paths || paths.length < minPathsCount) {\n    throw new Error(\n      'Must specify at least one file path as starting point. None were specified.'\n    );\n  }\n\n  let firstEntryPointPath = paths[0];\n  // make sure we start with an absolute path; everything will derived off this one.\n  if (!path.isAbsolute(firstEntryPointPath)) {\n    firstEntryPointPath = path.join(process.cwd(), firstEntryPointPath);\n  }\n  firstEntryPointPath = unixify(path.normalize(firstEntryPointPath));\n  if (DEBUG >= 1) console.log('firstEntryPointPath = ', firstEntryPointPath);\n\n  let entryStats = fs.lstatSync(firstEntryPointPath);\n\n  if (entryStats && entryStats.isDirectory()) {\n    // check if any of the default entry points exist:\n    // - index.md\n    // - index.html\n    // - README.md\n    let indexFile;\n    let indexFilePriority = 0;\n    let scanPath = path.join(firstEntryPointPath, '*.{md,htm,html}');\n    scanPath = unixify(scanPath);\n    if (DEBUG >= 1) console.log('scanPath:', scanPath);\n    const files = glob.sync(scanPath, {\n      nosort: true,\n      nomount: true,\n      nounique: false,\n      nocase: true,     //<-- uncomment this one for total failure to find any files >:-((\n      nodir: true,\n      nobrace: false,\n      gitignore: true\n    });\n    if (DEBUG >= 1) console.log(`root point DIR --> scan: ${JSON.stringify(files, null, 2)}`);\n\n    for (const f of files || []) {\n      switch (path.basename(f.toLowerCase())) {\n      case 'index.md':\n        if (indexFilePriority < 10) {\n          indexFilePriority = 10;\n          indexFile = f;\n        }\n\n        continue;\n\n      case 'index.htm':\n      case 'index.html':\n        if (indexFilePriority < 5) {\n          indexFilePriority = 5;\n          indexFile = f;\n        }\n\n        continue;\n\n      case 'readme.md':\n        if (indexFilePriority < 1) {\n          indexFilePriority = 1;\n          indexFile = f;\n        }\n\n        continue;\n\n      default:\n        continue;\n      }\n    }\n\n    if (indexFile) {\n      firstEntryPointPath = unixify(path.resolve(indexFile));\n      if (DEBUG >= 1) console.log('firstEntryPointPath', firstEntryPointPath);\n      entryStats = fs.lstatSync(firstEntryPointPath);\n    } else {\n      throw new Error(\n        `Could not find a default entry point file (index.md, index.html or README.md) in the entry point directory ${firstEntryPointPath} (${scanPath}`\n      );\n    }\n  }\n\n  if (!entryStats) {\n    throw new Error(`entry point does not exist: ${firstEntryPointPath}`);\n  }\n\n  if (!entryStats.isFile()) {\n    throw new Error(`entry point is not a file: ${firstEntryPointPath}`);\n  }\n\n  config.docTreeBasedir = path.dirname(firstEntryPointPath);\n\n\n  let outputDirPath = paths[1] || path.join(config.docTreeBasedir, (!config.docTreeBasedir.endsWith('docs') ? '../docs' : '../' + path.basename(config.docTreeBasedir) + '-output'));\n  // make sure we start with an absolute path; everything will derived off this one.\n  if (!path.isAbsolute(outputDirPath)) {\n    outputDirPath = path.join(process.cwd(), outputDirPath);\n  }\n  outputDirPath = unixify(path.normalize(outputDirPath));\n  if (DEBUG >= 1) console.log('outputDirPath = ', outputDirPath);\n  config.destinationPath = outputDirPath;\n\n  config.outputDirRelativePath = unixify(path.relative(config.docTreeBasedir, config.destinationPath));\n\n  if (DEBUG >= 1) console.log('config:', config);\n\n\n  // now scan the entire tree: collect potential files for comparison & treatment\n  //\n  // Produces an array of categories, which each are an array of file records,\n  // where each file record has this format:\n  //\n  // {\n  //   path,        -- full path to file\n  //   nameLC       -- lowercased filename\n  //   ext          -- lowercased filename extension\n  //   relativePath --  relative path to config.docTreeBasedir\n  // }\n  //\n  async function collectAllFiles() : Promise<ResultsCollection> {\n    let scanPath = path.join(config.docTreeBasedir, '**/*');\n    scanPath = unixify(scanPath);\n    if (DEBUG >= 1) console.log('scanPath:', scanPath);\n\n    return new Promise((resolve, reject) => {\n      glob(scanPath, {\n        nosort: true,\n        nomount: true,\n        nounique: false,\n        nocase: true,     //<-- uncomment this one for total failure to find any files >:-((\n        nodir: true,\n        nobrace: false,\n        gitignore: true\n      }, function processGlobResults(err, files) {\n        if (err) {\n          reject(new Error(`glob scan error: ${err}`));\n          return;\n        }\n\n        if (DEBUG >= 1) console.log(`root point DIR --> scan: ${JSON.stringify(files, null, 2)}`);\n\n        const rv: ResultsCollection = {\n          markdown: new Map(),\n          html: new Map(),\n          css: new Map(),\n          js: new Map(),\n          image: new Map(),\n          movie: new Map(),\n          misc: new Map(),\n          _: new Map()\n        };\n        const rv_mapping_def = {\n          markdown: [\n            'md',\n            'markdown'\n          ],\n          html: [\n            'html',\n            'htm'\n          ],\n          js: [\n            'js',\n            'mjs',\n            'ejs',\n            'ts',\n            'coffee'\n          ],\n          css: [\n            'css',\n            'scss',\n            'less',\n            'styl',\n            'stylus'\n          ],\n          image: [\n            'png',\n            'gif',\n            'jpg',\n            'jpeg',\n            'tiff',\n            'bmp',\n            'svg',\n            'psd',\n            'ai'\n          ],\n          movie: [\n            'mkv',\n            'mp4',\n            'avi',\n            'mov',\n            'flv'\n          ]\n        };\n        const rv_mapping = new Map();\n        for (const n in rv_mapping_def) {\n          const a = rv_mapping_def[n];\n          if (DEBUG >= 4) console.log('key n', { n, a });\n          for (const b of a) {\n            if (DEBUG >= 4) console.log('map n -> b', { n, b });\n            rv_mapping.set('.' + b, n);\n          }\n        }\n\n        if (DEBUG >= 3) console.log('######################### mapping ##########################\\n', rv_mapping, '\\n###########################################');\n\n        for (const p of files || []) {\n          const f = unixify(path.resolve(p));\n          if (DEBUG >= 9) console.log('hacky fix for glob output not being abs path on Windows:', { 'in': p, out: f });\n          const fname = path.basename(f.toLowerCase());\n          const ext = path.extname(fname);\n          const el: ResultFileRecord = {\n            path: f,\n            nameLC: fname,\n            ext: ext,\n            relativePath: unixify(path.relative(config.docTreeBasedir, f)),\n            destinationRelPath: null\n          };\n          const cat = rv_mapping.get(ext) || 'misc';\n          rv[cat].set(f, el);\n          rv._.set(f, el);\n        }\n        resolve(rv);\n      });\n    });\n  }\n\n  // async invocation, but don't wait for it yet:\n  const scan = collectAllFiles();\n\n  const md = MarkDown({\n    // Enable HTML tags in source\n    html: true,\n    // Use '/' to close single tags (<br />).\n    xhtmlOut: false,\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n    // CSS language prefix for fenced blocks. Can be useful for external highlighters.\n    langPrefix: 'language-',\n    // Autoconvert URL-like text to links\n    linkify: true,\n    // highSecurity:\n    // - false:           lower protection against XSS/Unicode-Homologue/etc. attacks via the input MarkDown.\n    //                    This setting assumes you own or at least trust the Markdown\n    //                    being fed to MarkDonw-It. The result is a nicer render.\n    // - true (default):  maximum protection against XSS/Unicode-Homologue/etc. attacks via the input MarkDown.\n    //                    This is the default setting and assumes you have no control or absolute trust in the Markdown\n    //                    being fed to MarkDonw-It. Use this setting when using markdown-it as part of a forum or other\n    //                    website where more-or-less arbitrary users can enter and feed any MarkDown to markdown-it.\n    //\n    // See https://en.wikipedia.org/wiki/Internationalized_domain_name for details on homograph attacks, for example.\n    highSecurity: false,\n    // Enable some language-neutral replacement + quotes beautification\n    typographer: true,\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '“”‘’',\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externally.\n    // If result starts with <pre... internal wrapper is skipped.\n    highlight: function () /*str, lang*/\n    {\n      console.error('highligh callback invoked!');\n      return '';\n    } // Configure default attributes for given tags\n    //default_attributes: { a: [['rel', 'nofollow']] }\n  });\n\n  // augment the md instance for use with the markdown_it_include plugin:\n  //md.getIncludeRootDir = ...\n\n  if (DEBUG >= 1) console.log('setting up markdown-it:', mdPluginCollective, typeof mdPluginCollective.use_dirty_dozen);\n  mdPluginCollective.use_dirty_dozen(md, {\n    abbr: {\n      abbreviations: readOptionalTxtConfigFile('.deGaulle/abbr-abbreviations.txt'),\n      links:         readOptionalTxtConfigFile('.deGaulle/abbr-links.txt'),\n      emphasis:      readOptionalTxtConfigFile('.deGaulle/abbr-emphasis-phrases.txt')\n    },\n\n    include: {\n      root: '/bogus/',\n      getRootDir: (options, state, startLine, endLine) => state.env.getIncludeRootDir(options, state, startLine, endLine)\n    },\n\n    wikilinks: {\n      postProcessPageName: function (pageName) {\n        const rv = myCustomPageNamePostprocessor(pageName);\n        if (DEBUG >= 1) console.log('wikilink transform:', { 'in': pageName, out: rv });\n        return rv;\n      }\n    }\n  });\n\n\n  const allFiles: ResultsCollection = await scan;\n  if (DEBUG >= 2) console.log('!!!!!!!!!!!!!!!! allFiles:', allFiles);\n\n  if (!allFiles.markdown.get(firstEntryPointPath) && !allFiles.html.get(firstEntryPointPath)) {\n    throw new Error(`root file '${firstEntryPointPath}' is supposed to be part of the website`);\n  }\n\n\n\n  console.log(`processing root file: ${firstEntryPointPath}...`);\n  const specRec = await compileMD(firstEntryPointPath, md, allFiles);\n\n  if (DEBUG >= 10) console.log('specRec:', specRec);\n\n  // now process the other MD files too:\n  for (const slot of allFiles.markdown) {\n    const key = slot[0];\n    const entry = slot[1];\n    entry.destinationRelPath = myCustomPageNamePostprocessor(entry.relativePath.slice(0, entry.relativePath.length - entry.ext.length));\n    if (DEBUG >= 5) console.log('!!!!!!!!!!!!!!!!!!!!!!!! markdown file record:', entry);\n\n    const specRec2 = await compileMD(key, md, allFiles);\n\n    if (DEBUG >= 3) console.log('specRec:', specRec2);\n    assert.strictEqual(specRec2, entry);\n  }\n\n  // now process the HTML files:\n  for (const slot of allFiles.html) {\n    const key = slot[0];\n    const entry = slot[1];\n    entry.destinationRelPath = myCustomPageNamePostprocessor(entry.relativePath.slice(0, entry.relativePath.length - entry.ext.length));\n    if (DEBUG >= 5) console.log('!!!!!!!!!!!!!!!!!!!!!!!! HTML file record:', entry);\n\n    const specRec2 = await loadHTML(key, allFiles);\n\n    if (DEBUG >= 3) console.log('specRec:', specRec2);\n    assert.strictEqual(specRec2, entry);\n  }\n\n  // now process the CSS, JS and other 'fixed assets' files:\n  //\n  // [css, js, image, movie, misc, _]\n  for (const type in allFiles) {\n    switch (type) {\n    case 'html':\n    case 'markdown':\n      continue;\n\n    case 'css':\n    case 'js':\n      {\n        const collection = allFiles[type];\n        for (const slot of collection) {\n          const key = slot[0];\n          const entry = slot[1];\n          entry.destinationRelPath = myCustomPageNamePostprocessor(entry.relativePath.slice(0, entry.relativePath.length - entry.ext.length));\n          if (DEBUG >= 5) console.log(`!!!!!!!!!!!!!!!!!!!!!!!! Type [${type}] file record:`, entry);\n\n          const specRec2 = await loadFixedAssetTextFile(key, allFiles, collection);\n\n          if (DEBUG >= 3) console.log('specRec:', specRec2);\n          assert.strictEqual(specRec2, entry);\n        }\n      }\n      continue;\n\n    default:\n      {\n        const collection = allFiles[type];\n        for (const slot of collection) {\n          const key = slot[0];\n          const entry = slot[1];\n          entry.destinationRelPath = myCustomPageNamePostprocessor(entry.relativePath.slice(0, entry.relativePath.length - entry.ext.length));\n          if (DEBUG >= 5) console.log(`!!!!!!!!!!!!!!!!!!!!!!!! Type [${type}] file record:`, entry);\n\n          const specRec2 = await loadFixedAssetBinaryFile(key, allFiles, collection);\n\n          if (DEBUG >= 3) console.log('specRec:', specRec2);\n          assert.strictEqual(specRec2, entry);\n        }\n      }\n      continue;\n    }\n  }\n\n  // now's the time to match the links in the generated content and do some linkage reporting alongside:\n  //\n  if (DEBUG >= 1) console.log('>>>>>>>>>>>>>>>>>>>> allFiles:', allFiles);\n  if (DEBUG >= 1) console.log('markdown AST token types:', Object.keys(markdownTokens).sort());\n\n\n\n\n\n\n\n}\n\n\n\nasync function compileMD(mdPath, md, allFiles) {\n  console.log(`processing file: ${mdPath}...`);\n\n  return new Promise((resolve, reject) => {\n    fs.readFile(\n      mdPath,\n      {\n        encoding: 'utf8'\n      },\n      async (err, data) => {\n        if (err) {\n          reject(new Error(\n            `ERROR: read error ${err} for file ${mdPath}`\n          ));\n          return;\n        }\n\n        const env : MarkdownItEnvironment = {\n          getIncludeRootDir: null\n        };\n\n        if (DEBUG >= 8)          console.log('source:\\n', data);\n\n        // augment the md instance for use with the markdown_it_include plugin:\n        env.getIncludeRootDir = function (options, state, startLine, endLine) {\n          if (DEBUG >= 6)          console.log('##### include root dir is today:', { dir: path.dirname(mdPath) });\n          return path.dirname(mdPath);\n        };\n\n        // let content = md.render(data); --> .parse + .renderer.render\n        //\n        // .parse --> new state + process: return tokens\n        // let tokens = md.parse(data, env)\n        const state = new md.core.State(data, md, env);\n        md.core.process(state);\n        const tokens = state.tokens;\n\n        if (DEBUG >= 10) console.log('tokens:\\n', JSON.stringify(cleanTokensForDisplay(tokens), null, 2));\n\n        const typeMap = new Set();\n        traverseTokens(tokens, (t, idx, arr, depth) => {\n          typeMap.add(t.type);\n          markdownTokens[t.type] = true;\n        });\n        if (DEBUG >= 4) console.log('token types:', typeMap);\n\n        if (0) {\n          let position = 0;\n          let prevToken = null;\n          traverseTokens(tokens, (t, idx, arr, depth) => {\n            if (!Number.isFinite(t.position)) {\n              console.error('erroneous token position:', t);\n              return;\n            }\n            if (!Number.isFinite(t.size)) {\n              console.error('erroneous token size:', t);\n              return;\n            }\n            if (t.position >= position) {\n              position = t.position;\n            } else {\n              console.warn('token position is dropping back / reversing:', { position, t, prevToken });\n            }\n            prevToken = t;\n          });\n        }\n\n        const content = md.renderer.render(tokens, md.options, env);\n\n        if (DEBUG >= 4) console.log('output:\\n', content);\n\n        const dom = new JSDOM('<html><head>\\n' + content,\n          { includeNodeLocations: true }\n        );\n\n        const document = dom.window.document;\n        const bodyEl = document.body; // implicitly created\n        const headEl = document.querySelector('head');\n        if (DEBUG >= 1)          console.log('MARKDOWN:\\n', { html: document, body: bodyEl.innerHTML, head: headEl.innerHTML });\n\n        // update the file record:\n        const el = allFiles.markdown.get(mdPath);\n        if (DEBUG >= 3) console.log('update the file record:', { mdPath, el });\n        el.HtmlContent = content;\n        //el.HtmlContent = bodyEl.innerHTML;\n        el.HtmlHeadContent = headEl.innerHTML;\n        el.HtmlBody = bodyEl;\n        el.HtmlHead = headEl;\n\n        resolve(el);\n      }\n    );\n  });\n}\n\n\n\nasync function loadHTML(htmlPath, allFiles) {\n  console.log(`processing file: ${htmlPath}...`);\n\n  return new Promise((resolve, reject) => {\n    fs.readFile(\n      htmlPath,\n      {\n        encoding: 'utf8'\n      },\n      async (err, data) => {\n        if (err) {\n          reject(new Error(\n            `ERROR: read error ${err} for file ${htmlPath}`\n          ));\n          return;\n        }\n\n        if (DEBUG >= 1)          console.log('source:\\n', data);\n\n        const dom = new JSDOM(data,\n          { includeNodeLocations: true }\n        );\n\n        const document = dom.window.document;\n        const bodyEl = document.body; // implicitly created\n        const headEl = document.querySelector('head');\n        if (DEBUG >= 1)          console.log('HTML:\\n', { html: document, body: bodyEl.innerHTML, head: headEl.innerHTML });\n\n        // update the file record:\n        const el = allFiles.html.get(htmlPath);\n        el.HtmlContent = bodyEl.innerHTML;\n        el.HtmlHeadContent = headEl.innerHTML;\n        el.HtmlBody = bodyEl;\n        el.HtmlHead = headEl;\n\n        resolve(el);\n      }\n    );\n  });\n}\n\nasync function loadFixedAssetTextFile(filePath, allFiles, collection) {\n  console.log(`processing file: ${filePath}...`);\n\n  return new Promise((resolve, reject) => {\n    fs.readFile(\n      filePath,\n      {\n        encoding: 'utf8'\n      },\n      async (err, data) => {\n        if (err) {\n          reject(new Error(\n            `ERROR: read error ${err} for file ${filePath}`\n          ));\n          return;\n        }\n\n        if (DEBUG >= 1)          console.log('source:\\n', data);\n\n        // update the file record:\n        const el = collection.get(filePath);\n        el.RawContent = data;\n\n        resolve(el);\n      }\n    );\n  });\n}\n\nasync function loadFixedAssetBinaryFile(filePath, allFiles, collection) {\n  console.log(`processing file: ${filePath}...`);\n\n  return new Promise((resolve, reject) => {\n    fs.readFile(\n      filePath,\n      {\n        encoding: 'utf8'\n      },\n      async (err, data) => {\n        if (err) {\n          reject(new Error(\n            `ERROR: read error ${err} for file ${filePath}`\n          ));\n          return;\n        }\n\n        if (DEBUG >= 1)          console.log('source:\\n', data);\n\n        // update the file record:\n        const el = collection.get(filePath);\n\n        resolve(el);\n      }\n    );\n  });\n}\n\n\nfunction cleanTokensForDisplay(tokens) {\n  const rv = [];\n  for (const i in tokens) {\n    let t = tokens[i];\n    t = cleanSingleTokenForDisplay(t);\n    if (t.children) {\n      t.children = cleanTokensForDisplay(t.children);\n    }\n    rv[i] = t;\n  }\n  return rv;\n}\n\nfunction cleanSingleTokenForDisplay(token) {\n  const rv = {};\n  for (const attr in token) {\n    if (token[attr] !== '' && token[attr] != null) {\n      rv[attr] = token[attr];\n    }\n  }\n  return rv;\n}\n\n// https://vuepress.vuejs.org/plugin/life-cycle.html#generated\nasync function mdGenerated(pagePaths) {\n  // cp docs-src/.nojekyll docs/ && cp docs-src/CNAME docs/\n  console.error('async generated HIT');\n\n  fs.writeFileSync(absDstPath('CNAME'), 'qiqqa.org\\n', 'utf8');\n\n  fs.writeFileSync(absDstPath('.nojekyll'), '');\n}\n\nfunction traverseTokens(tokens, cb, depth?: number) {\n  depth = depth || 0;\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    const t = tokens[i];\n    cb(t, i, tokens, depth);\n\n    if (t.children) {\n      traverseTokens(t.children, cb, depth + 1);\n    }\n  }\n}\n"],"names":["_Pact","state","value","o","pact","observer","callback","result","s","thenable","_cycle","length","then","reject","bind","_forOf","target","TypeError","push","i","loadFixedAssetBinaryFile","filePath","allFiles","collection","console","log","Promise","resolve","fs","readFile","encoding","err","data","Error","DEBUG","el","get","testValue","dispatchIndex","body","cases","test","_resumeAfterBody","loadFixedAssetTextFile","RawContent","_forTo","keys","loadHTML","htmlPath","dom","JSDOM","includeNodeLocations","document","window","bodyEl","headEl","querySelector","html","innerHTML","head","HtmlContent","HtmlHeadContent","HtmlBody","HtmlHead","compileMD","mdPath","md","env","getIncludeRootDir","options","startLine","endLine","dir","path","dirname","core","State","process","tokens","JSON","stringify","cleanTokensForDisplay","typeMap","Set","traverseTokens","t","idx","arr","depth","add","type","markdownTokens","position","prevToken","Number","isFinite","error","size","warn","content","renderer","render","markdown","buildWebsite","opts","command","collectAllFiles","scanPath","join","config","docTreeBasedir","unixify","glob","nosort","nomount","nounique","nocase","nodir","nobrace","gitignore","processGlobResults","files","rv","Map","css","js","image","movie","misc","_","rv_mapping_def","rv_mapping","n","a","b","set","p","f","out","fname","basename","toLowerCase","ext","extname","nameLC","relativePath","relative","destinationRelPath","cat","Math","max","debug","paths","slice","minPathsCount","firstEntryPointPath","isAbsolute","cwd","normalize","entryStats","lstatSync","isDirectory","indexFile","indexFilePriority","sync","isFile","outputDirPath","endsWith","destinationPath","outputDirRelativePath","scan","MarkDown","xhtmlOut","breaks","langPrefix","linkify","highSecurity","typographer","quotes","highlight","mdPluginCollective","use_dirty_dozen","abbr","abbreviations","readOptionalTxtConfigFile","links","emphasis","include","root","getRootDir","wikilinks","postProcessPageName","pageName","myCustomPageNamePostprocessor","specRec","Object","sort","slot","key","entry","specRec2","assert","strictEqual","sanityCheck","nomnom","require","pkg","jsdom","gitignoreParser","script","option","flag","help","cmd","ex","message","exit","nocommand","version","parse","replace","absSrcPath","rel","existsSync","src","readFileSync","lines","split","filter","l","trim","includes","map","parts","forEach","spec","deburr","cleanSingleTokenForDisplay","children","token","attr","cb","len"],"mappings":"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"}