{"version":3,"file":"deGaulle.umd.js","sources":["../src/index.js"],"sourcesContent":["//\n//\n//\nconst nomnom = require('@gerhobbelt/nomnom');\n\nconst MarkDown = require('@gerhobbelt/markdown-it');\n\nconst mdPluginCollective = require('markdown-it-dirty-dozen');\n\nconst pkg = require('../package.json');\n\nconst jsdom = require('jsdom');\nconst { JSDOM } = jsdom;\nconst glob = require('@gerhobbelt/glob');\nconst gitignoreParser = require('@gerhobbelt/gitignore-parser');\nconst assert = require('assert');\nconst _ = require('lodash');\n\nconst path = require('path');\nconst fs = require('fs');\n\nlet DEBUG = 1;\n\nlet markdownTokens = {};\n\n\nconst config = {\n  docTreeBasedir: null,\n  destinationPath: null\n};\n\nnomnom.script('deGaulle');\n\nnomnom\n  .command('build')\n  .option('debug', {\n    abbr: 'd',\n    flag: false,\n    help: 'Print debugging info'\n  })\n  .option('config', {\n    abbr: 'c',\n    'default': 'config.json',\n    help: 'JSON file with tests to run'\n  })\n  .callback(function (opts, cmd) {\n    try {\n      buildWebsite(opts, cmd);\n    } catch (ex) {\n      console.error(`ERROR: ${ex.message}\\n\\nException:\\n${ex}`);\n      process.exit(5);\n    }\n  })\n  .help('build website from sources');\n\nnomnom\n  .command('sanity')\n  .option('debug', {\n    abbr: 'd',\n    flag: false,\n    help: 'Print debugging info'\n  })\n  .option('config', {\n    abbr: 'c',\n    'default': 'config.json',\n    help: 'JSON file with tests to run'\n  })\n  .option('outfile', {\n    abbr: 'o',\n    help: 'file to write results to'\n  })\n  .callback(function (\n    opts\n    /* , cmd */\n  ) {\n    try {\n      sanityCheck(opts);\n    } catch (ex) {\n      console.error(`ERROR: ${ex.message}\\n\\nException:\\n${ex}`);\n      process.exit(5);\n    }\n  })\n  .help('run the sanity tests');\n\nnomnom\n  .nocommand()\n  .option('debug', {\n    abbr: 'd',\n    flag: false,\n    help: 'Print debugging info'\n  })\n  .option('config', {\n    abbr: 'c',\n    'default': 'config.json',\n    help: 'JSON file with tests to run'\n  })\n  .option('version', {\n    flag: true,\n    help: 'print version and exit',\n    callback: function () {\n      return `version ${pkg.version}`;\n    }\n  })\n  .callback(function (opts, cmd) {\n    try {\n      buildWebsite(opts, cmd);\n    } catch (ex) {\n      console.error(`ERROR: ${ex.message}\\n\\nException:\\n${ex}`);\n      process.exit(5);\n    }\n  });\n\nnomnom.parse();\n\n\n\n// -- done --\n\n\n\nfunction unixify(path) {\n  return path.replace(/\\\\/g, '/');\n}\n\nfunction absSrcPath(rel) {\n  let p = path.join(config.docTreeBasedir, rel);\n  return unixify(path.resolve(p));\n}\n\nfunction absDstPath(rel) {\n  if (!config.destinationPath) {\n    throw new Error('Internal error: used too early');\n  }\n  let p = path.join(config.destinationPath, rel);\n  return unixify(path.resolve(p));\n}\n\nfunction readOptionalTxtConfigFile(rel) {\n  let p = absSrcPath(rel);\n  if (fs.existsSync(p)) {\n    let src = fs.readFileSync(p, 'utf8');\n  // - split into lines\n  // - filter out any lines whicch don't have an '='\n  // - split each line across the initial '=' in there.\n  // - turn this into a hash table?\n    let lines = src.split(/[\\r\\n]/g);\n    lines = lines.filter((l) => l.trim().length > 1 && l.includes('=')).map((l) => {\n      let parts = l.split('=');\n      if (parts.length !== 2) {\n        throw new Error(`config line in ${rel} is expected to have only one '='`);\n      }\n      parts = parts.map((l) => l.trim());\n      return parts;\n    });\n    let rv = {};\n    lines.forEach((l) => {\n      rv[l[0]] = l[1];\n    });\n    return rv;\n  }\n  return {};\n}\n\nfunction myCustomPageNamePostprocessor(spec) {\n  // clean up unwanted characters\n  spec = spec.replace(/ :: /g, '/');\n  spec = spec.replace(/ --* /g, '/');\n  spec = _.deburr(spec).trim();\n  // normalize case\n  spec = spec.toLowerCase();\n  spec = spec\n      .replace(/[^\\w\\d\\s\\/_-]/g, '_');\n  spec = spec\n      .replace(/__+/g, '_');\n  spec = spec\n      .replace(/\\s+/g, ' ');\n  if (DEBUG >= 7) console.log('myCustomPageNamePostprocessor STAGE 1', spec);\n  spec = spec\n      .replace(/_-_/g, '_');\n  spec = spec\n      .replace(/ - /g, ' ');\n  spec = spec\n      .replace(/[ _]* [ _]*/g, ' ');\n  if (DEBUG >= 7) console.log('myCustomPageNamePostprocessor STAGE 2', spec);\n  spec = spec\n      .replace(/(^|\\/)[ _]+/g, '$1');\n  spec = spec\n      .replace(/[ _]+($|\\/)/g, '$1');\n  if (DEBUG >= 7) console.log('myCustomPageNamePostprocessor STAGE 3', spec);\n  spec = spec\n      .replace(/ /g, '_');\n  if (DEBUG >= 7) console.log('myCustomPageNamePostprocessor STAGE 4', spec);\n\n\n  return spec;\n}\n\nasync function buildWebsite(opts, command) {\n  console.log(\n    `buildWebsite: command: ${command || '<no-command>'}, opts: ${JSON.stringify(\n      opts,\n      null,\n      2\n    )}`\n  );\n\n  DEBUG = Math.max(DEBUG, Number.isFinite(+opts.debug) ? +opts.debug : opts.debug ? 1 : 0);\n  console.log('DEBUG = ', DEBUG);\n\n  let paths = opts._.slice(command ? 1 : 0);\n  const minPathsCount = 1;\n\n  if (!paths || paths.length < minPathsCount) {\n    throw new Error(\n      'Must specify at least one file path as starting point. None were specified.'\n    );\n  }\n\n  let firstEntryPointPath = paths[0];\n  // make sure we start with an absolute path; everything will derived off this one.\n  if (!path.isAbsolute(firstEntryPointPath)) {\n    firstEntryPointPath = path.join(process.cwd(), firstEntryPointPath);\n  }\n  firstEntryPointPath = unixify(path.normalize(firstEntryPointPath));\n  if (DEBUG >= 1) console.log('firstEntryPointPath = ', firstEntryPointPath);\n\n  let entryStats = fs.lstatSync(firstEntryPointPath);\n\n  if (entryStats && entryStats.isDirectory()) {\n    // check if any of the default entry points exist:\n    // - index.md\n    // - index.html\n    // - README.md\n    let indexFile;\n    let indexFilePriority = 0;\n    let scanPath = path.join(firstEntryPointPath, '*.{md,htm,html}');\n    scanPath = unixify(scanPath);\n    if (DEBUG >= 1) console.log('scanPath:', scanPath);\n    let files = glob.sync(scanPath, {\n      nosort: true,\n      nomount: true,\n      nounique: false,\n      nocase: true,     //<-- uncomment this one for total failure to find any files >:-((\n      nodir: true,\n      nobrace: false,\n      gitignore: true\n    });\n    if (DEBUG >= 1) console.log(`root point DIR --> scan: ${JSON.stringify(files, null, 2)}`);\n\n    for (const f of files || []) {\n      switch (path.basename(f.toLowerCase())) {\n      case 'index.md':\n        if (indexFilePriority < 10) {\n          indexFilePriority = 10;\n          indexFile = f;\n        }\n\n        continue;\n\n      case 'index.htm':\n      case 'index.html':\n        if (indexFilePriority < 5) {\n          indexFilePriority = 5;\n          indexFile = f;\n        }\n\n        continue;\n\n      case 'readme.md':\n        if (indexFilePriority < 1) {\n          indexFilePriority = 1;\n          indexFile = f;\n        }\n\n        continue;\n\n      default:\n        continue;\n      }\n    }\n\n    if (indexFile) {\n      firstEntryPointPath = unixify(path.resolve(indexFile));\n      if (DEBUG >= 1) console.log('firstEntryPointPath', firstEntryPointPath);\n      entryStats = fs.lstatSync(firstEntryPointPath);\n    } else {\n      throw new Error(\n        `Could not find a default entry point file (index.md, index.html or README.md) in the entry point directory ${firstEntryPointPath} (${scanPath}`\n      );\n    }\n  }\n\n  if (!entryStats) {\n    throw new Error(`entry point does not exist: ${firstEntryPointPath}`);\n  }\n\n  if (!entryStats.isFile()) {\n    throw new Error(`entry point is not a file: ${firstEntryPointPath}`);\n  }\n\n  config.docTreeBasedir = path.dirname(firstEntryPointPath);\n\n\n  let outputDirPath = paths[1] || path.join(config.docTreeBasedir, (!config.docTreeBasedir.endsWith('docs') ? '../docs' : '../' + path.basename(config.docTreeBasedir) + '-output'));\n  // make sure we start with an absolute path; everything will derived off this one.\n  if (!path.isAbsolute(outputDirPath)) {\n    outputDirPath = path.join(process.cwd(), outputDirPath);\n  }\n  outputDirPath = unixify(path.normalize(outputDirPath));\n  if (DEBUG >= 1) console.log('outputDirPath = ', outputDirPath);\n  config.destinationPath = outputDirPath;\n\n  config.outputDirRelativePath = unixify(path.relative(config.docTreeBasedir, config.destinationPath));\n\n  if (DEBUG >= 1) console.log('config:', config);\n\n\n  // now scan the entire tree: collect potential files for comparison & treatment\n  //\n  // Produces an array of categories, which each are an array of file records,\n  // where each file record has this format:\n  //\n  // {\n  //   path,        -- full path to file\n  //   nameLC       -- lowercased filename\n  //   ext          -- lowercased filename extension\n  //   relativePath --  relative path to config.docTreeBasedir\n  // }\n  //\n  async function collectAllFiles() {\n    let scanPath = path.join(config.docTreeBasedir, '**/*');\n    scanPath = unixify(scanPath);\n    if (DEBUG >= 1) console.log('scanPath:', scanPath);\n\n    return new Promise((resolve, reject) => {\n      glob(scanPath, {\n        nosort: true,\n        nomount: true,\n        nounique: false,\n        nocase: true,     //<-- uncomment this one for total failure to find any files >:-((\n        nodir: true,\n        nobrace: false,\n        gitignore: true\n      }, function processGlobResults(err, files) {\n        if (err) {\n          reject(new Error(`glob scan error: ${err}`));\n          return;\n        }\n\n        if (DEBUG >= 1) console.log(`root point DIR --> scan: ${JSON.stringify(files, null, 2)}`);\n\n        let rv = {\n          markdown: new Map(),\n          html: new Map(),\n          css: new Map(),\n          js: new Map(),\n          image: new Map(),\n          movie: new Map(),\n          misc: new Map(),\n          _: new Map()\n        };\n        const rv_mapping_def = {\n          markdown: [\n            'md',\n            'markdown'\n          ],\n          html: [\n            'html',\n            'htm'\n          ],\n          js: [\n            'js',\n            'mjs',\n            'ejs',\n            'ts',\n            'coffee'\n          ],\n          css: [\n            'css',\n            'scss',\n            'less',\n            'styl',\n            'stylus'\n          ],\n          image: [\n            'png',\n            'gif',\n            'jpg',\n            'jpeg',\n            'tiff',\n            'bmp',\n            'svg',\n            'psd',\n            'ai'\n          ],\n          movie: [\n            'mkv',\n            'mp4',\n            'avi',\n            'mov',\n            'flv'\n          ]\n        };\n        let rv_mapping = new Map();\n        for (let n in rv_mapping_def) {\n          let a = rv_mapping_def[n];\n          if (DEBUG >= 4) console.log('key n', { n, a });\n          for (let b of a) {\n            if (DEBUG >= 4) console.log('map n -> b', { n, b });\n            rv_mapping.set('.' + b, n);\n          }\n        }\n\n        if (DEBUG >= 3) console.log('######################### mapping ##########################\\n', rv_mapping, '\\n###########################################');\n\n        for (const p of files || []) {\n          f = unixify(path.resolve(p));\n          if (DEBUG >= 9) console.log('hacky fix for glob output not being abs path on Windows:', { 'in': p, out: f });\n          let fname = path.basename(f.toLowerCase());\n          let ext = path.extname(fname);\n          let el = {\n            path: f,\n            nameLC: fname,\n            ext: ext,\n            relativePath: unixify(path.relative(config.docTreeBasedir, f))\n          };\n          let cat = rv_mapping.get(ext) || 'misc';\n          rv[cat].set(f, el);\n          rv._.set(f, el);\n        }\n        resolve(rv);\n      });\n    });\n  }\n\n  // async invocation, but don't wait for it yet:\n  let scan = collectAllFiles();\n\n  let md = MarkDown({\n    // Enable HTML tags in source\n    html: true,\n    // Use '/' to close single tags (<br />).\n    xhtmlOut: false,\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n    // CSS language prefix for fenced blocks. Can be useful for external highlighters.\n    langPrefix: 'language-',\n    // Autoconvert URL-like text to links\n    linkify: true,\n    // highSecurity:\n    // - false:           lower protection against XSS/Unicode-Homologue/etc. attacks via the input MarkDown.\n    //                    This setting assumes you own or at least trust the Markdown\n    //                    being fed to MarkDonw-It. The result is a nicer render.\n    // - true (default):  maximum protection against XSS/Unicode-Homologue/etc. attacks via the input MarkDown.\n    //                    This is the default setting and assumes you have no control or absolute trust in the Markdown\n    //                    being fed to MarkDonw-It. Use this setting when using markdown-it as part of a forum or other\n    //                    website where more-or-less arbitrary users can enter and feed any MarkDown to markdown-it.\n    //\n    // See https://en.wikipedia.org/wiki/Internationalized_domain_name for details on homograph attacks, for example.\n    highSecurity: false,\n    // Enable some language-neutral replacement + quotes beautification\n    typographer: true,\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '“”‘’',\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externally.\n    // If result starts with <pre... internal wrapper is skipped.\n    highlight: function () /*str, lang*/\n    {\n      console.error('highligh callback invoked!');\n      return '';\n    } // Configure default attributes for given tags\n    //default_attributes: { a: [['rel', 'nofollow']] }\n  });\n\n  // augment the md instance for use with the markdown_it_include plugin:\n  //md.getIncludeRootDir = ...\n\n  if (DEBUG >= 1) console.log('setting up markdown-it:', mdPluginCollective, typeof mdPluginCollective.use_dirty_dozen);\n  mdPluginCollective.use_dirty_dozen(md, {\n    abbr: {\n      abbreviations: readOptionalTxtConfigFile('.deGaulle/abbr-abbreviations.txt'),\n      links:         readOptionalTxtConfigFile('.deGaulle/abbr-links.txt'),\n      emphasis:      readOptionalTxtConfigFile('.deGaulle/abbr-emphasis-phrases.txt')\n    },\n\n    include: {\n      root: '/bogus/',\n      getRootDir: (options, state, startLine, endLine) => state.env.getIncludeRootDir(options, state, startLine, endLine)\n    },\n\n    wikilinks: {\n      postProcessPageName: function (pageName) {\n        let rv = myCustomPageNamePostprocessor(pageName);\n        if (DEBUG >= 1) console.log('wikilink transform:', { 'in': pageName, out: rv });\n        return rv;\n      }\n    }\n  });\n\n\n  let allFiles = await scan;\n  if (DEBUG >= 2) console.log('!!!!!!!!!!!!!!!! allFiles:', allFiles);\n\n  if (!allFiles.markdown.get(firstEntryPointPath) && !allFiles.html.get(firstEntryPointPath)) {\n    throw new Error(`root file '${firstEntryPointPath}' is supposed to be part of the website`);\n  }\n\n\n\n  console.log(`processing root file: ${firstEntryPointPath}...`);\n  let specRec = await compileMD(firstEntryPointPath, md, allFiles);\n\n  if (DEBUG >= 10) console.log('specRec:', specRec);\n\n  // now process the other MD files too:\n  for (let slot of allFiles.markdown) {\n    let key = slot[0];\n    let entry = slot[1];\n    entry.destinationRelPath = myCustomPageNamePostprocessor(entry.relativePath.slice(0, entry.relativePath.length - entry.ext.length));\n    if (DEBUG >= 5) console.log('!!!!!!!!!!!!!!!!!!!!!!!! markdown file record:', entry);\n\n    let specRec2 = await compileMD(key, md, allFiles);\n\n    if (DEBUG >= 3) console.log('specRec:', specRec2);\n    assert.strictEqual(specRec2, entry);\n  }\n\n  // now process the HTML files:\n  for (let slot of allFiles.html) {\n    let key = slot[0];\n    let entry = slot[1];\n    entry.destinationRelPath = myCustomPageNamePostprocessor(entry.relativePath.slice(0, entry.relativePath.length - entry.ext.length));\n    if (DEBUG >= 5) console.log('!!!!!!!!!!!!!!!!!!!!!!!! HTML file record:', entry);\n\n    let specRec2 = await loadHTML(key, allFiles);\n\n    if (DEBUG >= 3) console.log('specRec:', specRec2);\n    assert.strictEqual(specRec2, entry);\n  }\n\n  // now process the CSS, JS and other 'fixed assets' files:\n  //\n  // [css, js, image, movie, misc, _]\n  for (let type in allFiles) {\n    switch (type) {\n    case 'html':\n    case 'markdown':\n      continue;\n\n    case 'css':\n    case 'js':\n      for (let slot of allFiles[type]) {\n        let key = slot[0];\n        let entry = slot[1];\n        entry.destinationRelPath = myCustomPageNamePostprocessor(entry.relativePath.slice(0, entry.relativePath.length - entry.ext.length));\n        if (DEBUG >= 5) console.log(`!!!!!!!!!!!!!!!!!!!!!!!! Type [${type}] file record:`, entry);\n\n        let specRec2 = await loadFixedAssetTextFile(key, allFiles);\n\n        if (DEBUG >= 3) console.log('specRec:', specRec2);\n        assert.strictEqual(specRec2, entry);\n      }\n      continue;\n\n    default:\n      for (let slot of allFiles[type]) {\n        let key = slot[0];\n        let entry = slot[1];\n        entry.destinationRelPath = myCustomPageNamePostprocessor(entry.relativePath.slice(0, entry.relativePath.length - entry.ext.length));\n        if (DEBUG >= 5) console.log(`!!!!!!!!!!!!!!!!!!!!!!!! Type [${type}] file record:`, entry);\n\n        let specRec2 = await loadFixedAssetBinaryFile(key, allFiles);\n\n        if (DEBUG >= 3) console.log('specRec:', specRec2);\n        assert.strictEqual(specRec2, entry);\n      }\n      continue;\n    }\n  }\n\n  // now's the time to match the links in the generated content and do some linkage reporting alongside:\n  //\n  if (DEBUG >= 1) console.log('>>>>>>>>>>>>>>>>>>>> allFiles:', allFiles);\n  if (DEBUG >= 1) console.log('markdown AST token types:', Object.keys(markdownTokens).sort());\n\n\n\n\n\n\n\n}\n\n\n\nasync function compileMD(mdPath, md, allFiles) {\n  console.log(`processing file: ${mdPath}...`);\n\n  return new Promise((resolve, reject) => {\n    fs.readFile(\n      mdPath,\n      {\n        encoding: 'utf8'\n      },\n      async (err, data) => {\n        if (err) {\n          reject(new Error(\n            `ERROR: read error ${err} for file ${mdPath}`\n          ));\n          return;\n        }\n\n        let env = {};\n\n        if (DEBUG >= 8)          console.log('source:\\n', data);\n\n        // augment the md instance for use with the markdown_it_include plugin:\n        env.getIncludeRootDir = function (options, state, startLine, endLine) {\n          if (DEBUG >= 6)          console.log('##### include root dir is today:', { dir: path.dirname(mdPath) });\n          return path.dirname(mdPath);\n        };\n\n        // let content = md.render(data); --> .parse + .renderer.render\n        //\n        // .parse --> new state + process: return tokens\n        // let tokens = md.parse(data, env)\n        let state = new md.core.State(data, md, env);\n        md.core.process(state);\n        let tokens = state.tokens;\n\n        if (DEBUG >= 10) console.log('tokens:\\n', JSON.stringify(cleanTokensForDisplay(tokens), null, 2));\n\n        let typeMap = new Set();\n        traverseTokens(tokens, (t, idx, arr, depth) => {\n          typeMap.add(t.type);\n          markdownTokens[t.type] = true;\n        });\n        if (DEBUG >= 4) console.log('token types:', typeMap);\n\n        if (0) {\n          let position = 0;\n          let prevToken = null;\n          traverseTokens(tokens, (t, idx, arr, depth) => {\n            if (!Number.isFinite(t.position)) {\n              console.error('erroneous token position:', t);\n              return;\n            }\n            if (!Number.isFinite(t.size)) {\n              console.error('erroneous token size:', t);\n              return;\n            }\n            if (t.position >= position) {\n              position = t.position;\n            } else {\n              console.warn('token position is dropping back / reversing:', { position, t, prevToken });\n            }\n            prevToken = t;\n          });\n        }\n\n        let content = md.renderer.render(tokens, md.options, env);\n\n        if (DEBUG >= 4) console.log('output:\\n', content);\n\n        const dom = new JSDOM('<html><head>\\n' + content,\n          { includeNodeLocations: true }\n        );\n\n        const document = dom.window.document;\n        const bodyEl = document.body; // implicitly created\n        const headEl = document.querySelector('head');\n        if (DEBUG >= 1)          console.log('MARKDOWN:\\n', { html: document, body: bodyEl.innerHTML, head: headEl.innerHTML });\n\n        // update the file record:\n        let el = allFiles.markdown.get(mdPath);\n        if (DEBUG >= 3) console.log('update the file record:', { mdPath, el });\n        el.HtmlContent = content;\n        //el.HtmlContent = bodyEl.innerHTML;\n        el.HtmlHeadContent = headEl.innerHTML;\n        el.HtmlBody = bodyEl;\n        el.HtmlHead = headEl;\n\n        resolve(el);\n      }\n    );\n  });\n}\n\n\n\nasync function loadHTML(htmlPath, allFiles) {\n  console.log(`processing file: ${htmlPath}...`);\n\n  return new Promise((resolve, reject) => {\n    fs.readFile(\n      htmlPath,\n      {\n        encoding: 'utf8'\n      },\n      async (err, data) => {\n        if (err) {\n          reject(new Error(\n            `ERROR: read error ${err} for file ${htmlPath}`\n          ));\n          return;\n        }\n\n        if (DEBUG >= 1)          console.log('source:\\n', data);\n\n        const dom = new JSDOM(data,\n          { includeNodeLocations: true }\n        );\n\n        const document = dom.window.document;\n        const bodyEl = document.body; // implicitly created\n        const headEl = document.querySelector('head');\n        if (DEBUG >= 1)          console.log('HTML:\\n', { html: document, body: bodyEl.innerHTML, head: headEl.innerHTML });\n\n        // update the file record:\n        let el = allFiles.html.get(htmlPath);\n        el.HtmlContent = bodyEl.innerHTML;\n        el.HtmlHeadContent = headEl.innerHTML;\n        el.HtmlBody = bodyEl;\n        el.HtmlHead = headEl;\n\n        resolve(el);\n      }\n    );\n  });\n}\n\nasync function loadFixedAssetTextFile(filePath, allFiles) {\n  console.log(`processing file: ${filePath}...`);\n\n  return new Promise((resolve, reject) => {\n    fs.readFile(\n      htmlPath,\n      {\n        encoding: 'utf8'\n      },\n      async (err, data) => {\n        if (err) {\n          reject(new Error(\n            `ERROR: read error ${err} for file ${htmlPath}`\n          ));\n          return;\n        }\n\n        if (DEBUG >= 1)          console.log('source:\\n', data);\n\n        // update the file record:\n        el.RawContent = data;\n\n        resolve(el);\n      }\n    );\n  });\n}\n\nasync function loadFixedAssetBinaryFile(filePath, allFiles) {\n  console.log(`processing file: ${filePath}...`);\n\n  return new Promise((resolve, reject) => {\n    fs.readFile(\n      htmlPath,\n      {\n        encoding: 'utf8'\n      },\n      async (err, data) => {\n        if (err) {\n          reject(new Error(\n            `ERROR: read error ${err} for file ${htmlPath}`\n          ));\n          return;\n        }\n\n        if (DEBUG >= 1)          console.log('source:\\n', data);\n\n        // update the file record:\n\n        resolve(el);\n      }\n    );\n  });\n}\n\n\nfunction cleanTokensForDisplay(tokens) {\n  let rv = [];\n  for (let i in tokens) {\n    let t = tokens[i];\n    t = cleanSingleTokenForDisplay(t);\n    if (t.children) {\n      t.children = cleanTokensForDisplay(t.children);\n    }\n    rv[i] = t;\n  }\n  return rv;\n}\n\nfunction cleanSingleTokenForDisplay(token) {\n  let rv = {};\n  for (let attr in token) {\n    if (token[attr] !== '' && token[attr] != null) {\n      rv[attr] = token[attr];\n    }\n  }\n  return rv;\n}\n\n// https://vuepress.vuejs.org/plugin/life-cycle.html#generated\nasync function mdGenerated(pagePaths) {\n  // cp docs-src/.nojekyll docs/ && cp docs-src/CNAME docs/\n  console.error('async generated HIT');\n\n  fs.writeFileSync(absDstPath('CNAME'), 'qiqqa.org\\n', 'utf8');\n\n  fs.writeFileSync(absDstPath('.nojekyll'), '');\n}\n\nfunction traverseTokens(tokens, cb, depth) {\n  depth = depth || 0;\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    let t = tokens[i];\n    cb(t, i, tokens, depth);\n\n    if (t.children) {\n      traverseTokens(t.children, cb, depth + 1);\n    }\n  }\n}\n"],"names":["Symbol","iterator","_settle","pact","state","value","s","_Pact","v","o","bind","then","observer","prototype","onFulfilled","onRejected","result","callback","e","_this","_isSettledPact","thenable","_forTo","array","body","check","i","reject","_cycle","length","_forOf","target","_iteratorSymbol","step","next","done","return","_fixup","TypeError","values","push","loadFixedAssetBinaryFile","filePath","allFiles","console","log","Promise","resolve","fs","readFile","htmlPath","encoding","err","data","Error","DEBUG","el","_switch","discriminant","cases","dispatchIndex","awaitBody","outer","test","testValue","fallthroughCheck","_resumeAfterBody","_resumeAfterTest","loadFixedAssetTextFile","RawContent","_forIn","keys","key","loadHTML","dom","JSDOM","includeNodeLocations","document","window","bodyEl","headEl","querySelector","html","innerHTML","head","get","HtmlContent","HtmlHeadContent","HtmlBody","HtmlHead","compileMD","mdPath","md","env","getIncludeRootDir","options","startLine","endLine","dir","path","dirname","core","State","process","tokens","JSON","stringify","cleanTokensForDisplay","typeMap","Set","traverseTokens","t","idx","arr","depth","add","type","markdownTokens","position","prevToken","Number","isFinite","error","size","warn","content","renderer","render","markdown","buildWebsite","opts","command","collectAllFiles","scanPath","join","config","docTreeBasedir","unixify","glob","nosort","nomount","nounique","nocase","nodir","nobrace","gitignore","processGlobResults","files","rv","Map","css","js","image","movie","misc","_","rv_mapping_def","rv_mapping","n","a","b","set","p","f","out","fname","basename","toLowerCase","ext","extname","nameLC","relativePath","relative","cat","Math","max","debug","paths","slice","minPathsCount","firstEntryPointPath","isAbsolute","cwd","normalize","entryStats","lstatSync","isDirectory","indexFile","indexFilePriority","sync","isFile","outputDirPath","endsWith","destinationPath","outputDirRelativePath","scan","MarkDown","xhtmlOut","breaks","langPrefix","linkify","highSecurity","typographer","quotes","highlight","mdPluginCollective","use_dirty_dozen","abbr","abbreviations","readOptionalTxtConfigFile","links","emphasis","include","root","getRootDir","wikilinks","postProcessPageName","pageName","myCustomPageNamePostprocessor","specRec","Object","sort","slot","entry","destinationRelPath","specRec2","assert","strictEqual","nomnom","require","pkg","jsdom","gitignoreParser","script","option","flag","help","cmd","ex","message","exit","sanityCheck","nocommand","version","parse","replace","absSrcPath","rel","existsSync","src","readFileSync","lines","split","filter","l","trim","includes","map","parts","forEach","spec","deburr","cleanSingleTokenForDisplay","children","token","attr","cb","len"],"mappings":"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"}