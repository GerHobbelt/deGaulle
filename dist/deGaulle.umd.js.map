{"version":3,"file":"deGaulle.umd.js","sources":["../js/src/index.js"],"sourcesContent":["//\r\n//\r\n//\r\nconst nomnom = require('@gerhobbelt/nomnom');\r\nconst MarkDown = require('@gerhobbelt/markdown-it');\r\nconst mdPluginCollective = require('markdown-it-dirty-dozen');\r\nconst pkg = require('../package.json');\r\nconst jsdom = require('jsdom');\r\nconst { JSDOM } = jsdom;\r\nconst glob = require('@gerhobbelt/glob');\r\nconst gitignoreParser = require('@gerhobbelt/gitignore-parser');\r\nconst assert = require('assert');\r\nconst _ = require('lodash');\r\nconst path = require('path');\r\nconst fs = require('fs');\r\nlet DEBUG = 10;\r\nconst markdownTokens = {};\r\nconst config = {\r\n    docTreeBasedir: null,\r\n    destinationPath: null,\r\n    outputDirRelativePath: null\r\n};\r\nnomnom.script('deGaulle');\r\nnomnom\r\n    .command('build')\r\n    .option('debug', {\r\n    abbr: 'd',\r\n    flag: false,\r\n    help: 'Print debugging info'\r\n})\r\n    .option('config', {\r\n    abbr: 'c',\r\n    'default': 'config.json',\r\n    help: 'JSON file with tests to run'\r\n})\r\n    .callback(function (opts, cmd) {\r\n    try {\r\n        buildWebsite(opts, cmd);\r\n    }\r\n    catch (ex) {\r\n        console.error(`ERROR: ${ex.message}\\n\\nException:\\n${ex}`);\r\n        process.exit(5);\r\n    }\r\n})\r\n    .help('build website from sources');\r\nnomnom\r\n    .command('sanity')\r\n    .option('debug', {\r\n    abbr: 'd',\r\n    flag: false,\r\n    help: 'Print debugging info'\r\n})\r\n    .option('config', {\r\n    abbr: 'c',\r\n    'default': 'config.json',\r\n    help: 'JSON file with tests to run'\r\n})\r\n    .option('outfile', {\r\n    abbr: 'o',\r\n    help: 'file to write results to'\r\n})\r\n    .callback(function (opts, cmd) {\r\n    try {\r\n        sanityCheck(opts, cmd);\r\n    }\r\n    catch (ex) {\r\n        console.error(`ERROR: ${ex.message}\\n\\nException:\\n${ex}`);\r\n        process.exit(5);\r\n    }\r\n})\r\n    .help('run the sanity tests');\r\nnomnom\r\n    .nocommand()\r\n    .option('debug', {\r\n    abbr: 'd',\r\n    flag: false,\r\n    help: 'Print debugging info'\r\n})\r\n    .option('config', {\r\n    abbr: 'c',\r\n    'default': 'config.json',\r\n    help: 'JSON file with tests to run'\r\n})\r\n    .option('version', {\r\n    flag: true,\r\n    help: 'print version and exit',\r\n    callback: function () {\r\n        return `version ${pkg.version}`;\r\n    }\r\n})\r\n    .callback(function (opts, cmd) {\r\n    try {\r\n        buildWebsite(opts, cmd);\r\n    }\r\n    catch (ex) {\r\n        console.error(`ERROR: ${ex.message}\\n\\nException:\\n${ex}`);\r\n        process.exit(5);\r\n    }\r\n});\r\nnomnom.parse();\r\n// -- done --\r\nfunction unixify(path) {\r\n    return path.replace(/\\\\/g, '/');\r\n}\r\nfunction absSrcPath(rel) {\r\n    const p = path.join(config.docTreeBasedir, rel);\r\n    return unixify(path.resolve(p));\r\n}\r\nfunction absDstPath(rel) {\r\n    if (!config.destinationPath) {\r\n        throw new Error('Internal error: used too early');\r\n    }\r\n    const p = path.join(config.destinationPath, rel);\r\n    return unixify(path.resolve(p));\r\n}\r\nfunction readOptionalTxtConfigFile(rel) {\r\n    const p = absSrcPath(rel);\r\n    if (fs.existsSync(p)) {\r\n        const src = fs.readFileSync(p, 'utf8');\r\n        // - split into lines\r\n        // - filter out any lines whicch don't have an '='\r\n        // - split each line across the initial '=' in there.\r\n        // - turn this into a hash table?\r\n        let lines = src.split(/[\\r\\n]/g);\r\n        lines = lines.filter((l) => l.trim().length > 1 && l.includes('=')).map((l) => {\r\n            let parts = l.split('=');\r\n            if (parts.length !== 2) {\r\n                throw new Error(`config line in ${rel} is expected to have only one '='`);\r\n            }\r\n            parts = parts.map((l) => l.trim());\r\n            return parts;\r\n        });\r\n        const rv = {};\r\n        lines.forEach((l) => {\r\n            rv[l[0]] = l[1];\r\n        });\r\n        return rv;\r\n    }\r\n    return {};\r\n}\r\nfunction myCustomPageNamePostprocessor(spec) {\r\n    // clean up unwanted characters\r\n    spec = spec.replace(/ :: /g, '/');\r\n    spec = spec.replace(/ --* /g, '/');\r\n    spec = _.deburr(spec).trim();\r\n    // normalize case\r\n    spec = spec.toLowerCase();\r\n    spec = spec\r\n        .replace(/[^\\w\\d\\s\\/_-]/g, '_');\r\n    spec = spec\r\n        .replace(/__+/g, '_');\r\n    spec = spec\r\n        .replace(/\\s+/g, ' ');\r\n    if (DEBUG >= 7)\r\n        console.log('myCustomPageNamePostprocessor STAGE 1', spec);\r\n    spec = spec\r\n        .replace(/_-_/g, '_');\r\n    spec = spec\r\n        .replace(/ - /g, ' ');\r\n    spec = spec\r\n        .replace(/[ _]* [ _]*/g, ' ');\r\n    if (DEBUG >= 7)\r\n        console.log('myCustomPageNamePostprocessor STAGE 2', spec);\r\n    spec = spec\r\n        .replace(/(^|\\/)[ _]+/g, '$1');\r\n    spec = spec\r\n        .replace(/[ _]+($|\\/)/g, '$1');\r\n    if (DEBUG >= 7)\r\n        console.log('myCustomPageNamePostprocessor STAGE 3', spec);\r\n    spec = spec\r\n        .replace(/ /g, '_');\r\n    if (DEBUG >= 7)\r\n        console.log('myCustomPageNamePostprocessor STAGE 4', spec);\r\n    return spec;\r\n}\r\nasync function sanityCheck(opts, command) {\r\n    console.log(`sanityCheck: command: ${command || '<no-command>'}, opts: ${JSON.stringify(opts, null, 2)}`);\r\n    DEBUG = Math.max(DEBUG, Number.isFinite(+opts.debug) ? +opts.debug : opts.debug ? 1 : 0);\r\n    console.log('DEBUG = ', DEBUG);\r\n    return new Promise((resolve, reject) => {\r\n        resolve(0);\r\n    });\r\n}\r\nasync function buildWebsite(opts, command) {\r\n    console.log(`buildWebsite: command: ${command || '<no-command>'}, opts: ${JSON.stringify(opts, null, 2)}`);\r\n    DEBUG = Math.max(DEBUG, Number.isFinite(+opts.debug) ? +opts.debug : opts.debug ? 1 : 0);\r\n    console.log('DEBUG = ', DEBUG);\r\n    const paths = opts._.slice(command ? 1 : 0);\r\n    const minPathsCount = 1;\r\n    if (!paths || paths.length < minPathsCount) {\r\n        throw new Error('Must specify at least one file path as starting point. None were specified.');\r\n    }\r\n    let firstEntryPointPath = paths[0];\r\n    // make sure we start with an absolute path; everything will derived off this one.\r\n    if (!path.isAbsolute(firstEntryPointPath)) {\r\n        firstEntryPointPath = path.join(process.cwd(), firstEntryPointPath);\r\n    }\r\n    firstEntryPointPath = unixify(path.normalize(firstEntryPointPath));\r\n    if (DEBUG >= 1)\r\n        console.log('firstEntryPointPath = ', firstEntryPointPath);\r\n    let entryStats = fs.lstatSync(firstEntryPointPath);\r\n    if (entryStats && entryStats.isDirectory()) {\r\n        // check if any of the default entry points exist:\r\n        // - index.md\r\n        // - index.html\r\n        // - README.md\r\n        let indexFile;\r\n        let indexFilePriority = 0;\r\n        let scanPath = path.join(firstEntryPointPath, '*.{md,htm,html}');\r\n        scanPath = unixify(scanPath);\r\n        if (DEBUG >= 1)\r\n            console.log('scanPath:', scanPath);\r\n        const files = glob.sync(scanPath, {\r\n            nosort: true,\r\n            nomount: true,\r\n            nounique: false,\r\n            nocase: true,\r\n            nodir: true,\r\n            nobrace: false,\r\n            gitignore: true\r\n        });\r\n        if (DEBUG >= 1)\r\n            console.log(`root point DIR --> scan: ${JSON.stringify(files, null, 2)}`);\r\n        const filelist = files || [];\r\n        for (const f of filelist) {\r\n            console.log('Loop!', { f });\r\n            const basename = path.basename(f.toLowerCase());\r\n            console.log('Can this serve as root?', basename);\r\n            switch (basename) {\r\n                case 'index.md':\r\n                    if (indexFilePriority < 10) {\r\n                        indexFilePriority = 10;\r\n                        indexFile = f;\r\n                    }\r\n                    break;\r\n                case 'index.htm':\r\n                case 'index.html':\r\n                    if (indexFilePriority < 5) {\r\n                        indexFilePriority = 5;\r\n                        indexFile = f;\r\n                    }\r\n                    break;\r\n                case 'readme.md':\r\n                    console.log('Hit!', basename);\r\n                    if (indexFilePriority < 1) {\r\n                        indexFilePriority = 1;\r\n                        indexFile = f;\r\n                    }\r\n                    console.log('Continue!', indexFile);\r\n                    break;\r\n                default:\r\n                    console.log('WUT?!', basename);\r\n                    break;\r\n            }\r\n        }\r\n        console.log('Loop end!', indexFile);\r\n        console.log('root scan -> indexFile', indexFile);\r\n        if (indexFile) {\r\n            firstEntryPointPath = unixify(path.resolve(indexFile));\r\n            if (DEBUG >= 1)\r\n                console.log('root scan -> firstEntryPointPath', firstEntryPointPath);\r\n            entryStats = fs.lstatSync(firstEntryPointPath);\r\n        }\r\n        else {\r\n            throw new Error(`Could not find a default entry point file (index.md, index.html or README.md) in the entry point directory ${firstEntryPointPath} (${scanPath}`);\r\n        }\r\n    }\r\n    if (!entryStats) {\r\n        throw new Error(`entry point does not exist: ${firstEntryPointPath}`);\r\n    }\r\n    if (!entryStats.isFile()) {\r\n        throw new Error(`entry point is not a file: ${firstEntryPointPath}`);\r\n    }\r\n    config.docTreeBasedir = path.dirname(firstEntryPointPath);\r\n    let outputDirPath = paths[1] || path.join(config.docTreeBasedir, (!config.docTreeBasedir.endsWith('docs') ? '../docs' : '../' + path.basename(config.docTreeBasedir) + '-output'));\r\n    // make sure we start with an absolute path; everything will derived off this one.\r\n    if (!path.isAbsolute(outputDirPath)) {\r\n        outputDirPath = path.join(process.cwd(), outputDirPath);\r\n    }\r\n    outputDirPath = unixify(path.normalize(outputDirPath));\r\n    if (DEBUG >= 1)\r\n        console.log('outputDirPath = ', outputDirPath);\r\n    config.destinationPath = outputDirPath;\r\n    config.outputDirRelativePath = unixify(path.relative(config.docTreeBasedir, config.destinationPath));\r\n    if (DEBUG >= 1)\r\n        console.log('config:', config);\r\n    // now scan the entire tree: collect potential files for comparison & treatment\r\n    //\r\n    // Produces an array of categories, which each are an array of file records,\r\n    // where each file record has this format:\r\n    //\r\n    // {\r\n    //   path,        -- full path to file\r\n    //   nameLC       -- lowercased filename\r\n    //   ext          -- lowercased filename extension\r\n    //   relativePath --  relative path to config.docTreeBasedir\r\n    // }\r\n    //\r\n    async function collectAllFiles() {\r\n        let scanPath = path.join(config.docTreeBasedir, '**/*');\r\n        scanPath = unixify(scanPath);\r\n        if (DEBUG >= 1)\r\n            console.log('scanPath:', scanPath);\r\n        return new Promise((resolve, reject) => {\r\n            glob(scanPath, {\r\n                nosort: true,\r\n                nomount: true,\r\n                nounique: false,\r\n                nocase: true,\r\n                nodir: true,\r\n                nobrace: false,\r\n                gitignore: true\r\n            }, function processGlobResults(err, files) {\r\n                if (err) {\r\n                    reject(new Error(`glob scan error: ${err}`));\r\n                    return;\r\n                }\r\n                if (DEBUG >= 1)\r\n                    console.log(`root point DIR --> scan: ${JSON.stringify(files, null, 2)}`);\r\n                const rv = {\r\n                    markdown: new Map(),\r\n                    html: new Map(),\r\n                    css: new Map(),\r\n                    js: new Map(),\r\n                    image: new Map(),\r\n                    movie: new Map(),\r\n                    misc: new Map(),\r\n                    _: new Map()\r\n                };\r\n                const rv_mapping_def = {\r\n                    markdown: [\r\n                        'md',\r\n                        'markdown'\r\n                    ],\r\n                    html: [\r\n                        'html',\r\n                        'htm'\r\n                    ],\r\n                    js: [\r\n                        'js',\r\n                        'mjs',\r\n                        'ejs',\r\n                        'ts',\r\n                        'coffee'\r\n                    ],\r\n                    css: [\r\n                        'css',\r\n                        'scss',\r\n                        'less',\r\n                        'styl',\r\n                        'stylus'\r\n                    ],\r\n                    image: [\r\n                        'png',\r\n                        'gif',\r\n                        'jpg',\r\n                        'jpeg',\r\n                        'tiff',\r\n                        'bmp',\r\n                        'svg',\r\n                        'psd',\r\n                        'ai'\r\n                    ],\r\n                    movie: [\r\n                        'mkv',\r\n                        'mp4',\r\n                        'avi',\r\n                        'mov',\r\n                        'flv'\r\n                    ]\r\n                };\r\n                const rv_mapping = new Map();\r\n                for (const n in rv_mapping_def) {\r\n                    const a = rv_mapping_def[n];\r\n                    if (DEBUG >= 4)\r\n                        console.log('key n', { n, a });\r\n                    for (const b of a) {\r\n                        if (DEBUG >= 4)\r\n                            console.log('map n -> b', { n, b });\r\n                        rv_mapping.set('.' + b, n);\r\n                    }\r\n                }\r\n                if (DEBUG >= 3)\r\n                    console.log('######################### mapping ##########################\\n', rv_mapping, '\\n###########################################');\r\n                for (const p of files || []) {\r\n                    const f = unixify(path.resolve(p));\r\n                    if (DEBUG >= 9)\r\n                        console.log('hacky fix for glob output not being abs path on Windows:', { 'in': p, out: f });\r\n                    const fname = path.basename(f.toLowerCase());\r\n                    const ext = path.extname(fname);\r\n                    const el = {\r\n                        path: f,\r\n                        nameLC: fname,\r\n                        ext: ext,\r\n                        relativePath: unixify(path.relative(config.docTreeBasedir, f)),\r\n                        destinationRelPath: null\r\n                    };\r\n                    const cat = rv_mapping.get(ext) || 'misc';\r\n                    rv[cat].set(f, el);\r\n                    rv._.set(f, el);\r\n                }\r\n                resolve(rv);\r\n            });\r\n        });\r\n    }\r\n    // async invocation, but don't wait for it yet:\r\n    const scan = collectAllFiles();\r\n    const md = MarkDown({\r\n        // Enable HTML tags in source\r\n        html: true,\r\n        // Use '/' to close single tags (<br />).\r\n        xhtmlOut: false,\r\n        // Convert '\\n' in paragraphs into <br>\r\n        breaks: false,\r\n        // CSS language prefix for fenced blocks. Can be useful for external highlighters.\r\n        langPrefix: 'language-',\r\n        // Autoconvert URL-like text to links\r\n        linkify: true,\r\n        // highSecurity:\r\n        // - false:           lower protection against XSS/Unicode-Homologue/etc. attacks via the input MarkDown.\r\n        //                    This setting assumes you own or at least trust the Markdown\r\n        //                    being fed to MarkDonw-It. The result is a nicer render.\r\n        // - true (default):  maximum protection against XSS/Unicode-Homologue/etc. attacks via the input MarkDown.\r\n        //                    This is the default setting and assumes you have no control or absolute trust in the Markdown\r\n        //                    being fed to MarkDonw-It. Use this setting when using markdown-it as part of a forum or other\r\n        //                    website where more-or-less arbitrary users can enter and feed any MarkDown to markdown-it.\r\n        //\r\n        // See https://en.wikipedia.org/wiki/Internationalized_domain_name for details on homograph attacks, for example.\r\n        highSecurity: false,\r\n        // Enable some language-neutral replacement + quotes beautification\r\n        typographer: true,\r\n        // Double + single quotes replacement pairs, when typographer enabled,\r\n        // and smartquotes on. Could be either a String or an Array.\r\n        //\r\n        // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\r\n        // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\r\n        quotes: '“”‘’',\r\n        // Highlighter function. Should return escaped HTML,\r\n        // or '' if the source string is not changed and should be escaped externally.\r\n        // If result starts with <pre... internal wrapper is skipped.\r\n        highlight: function () {\r\n            console.error('highligh callback invoked!');\r\n            return '';\r\n        } // Configure default attributes for given tags\r\n        //default_attributes: { a: [['rel', 'nofollow']] }\r\n    });\r\n    // augment the md instance for use with the markdown_it_include plugin:\r\n    //md.getIncludeRootDir = ...\r\n    if (DEBUG >= 1)\r\n        console.log('setting up markdown-it:', mdPluginCollective, typeof mdPluginCollective.use_dirty_dozen);\r\n    mdPluginCollective.use_dirty_dozen(md, {\r\n        abbr: {\r\n            abbreviations: readOptionalTxtConfigFile('.deGaulle/abbr-abbreviations.txt'),\r\n            links: readOptionalTxtConfigFile('.deGaulle/abbr-links.txt'),\r\n            emphasis: readOptionalTxtConfigFile('.deGaulle/abbr-emphasis-phrases.txt')\r\n        },\r\n        include: {\r\n            root: '/includes/',\r\n            getRootDir: (options, state, startLine, endLine) => state.env.getIncludeRootDir(options, state, startLine, endLine)\r\n        },\r\n        wikilinks: {\r\n            postProcessPageName: function (pageName) {\r\n                const rv = myCustomPageNamePostprocessor(pageName);\r\n                if (DEBUG >= 1)\r\n                    console.log('wikilink transform:', { 'in': pageName, out: rv });\r\n                return rv;\r\n            }\r\n        }\r\n    });\r\n    const allFiles = await scan;\r\n    if (DEBUG >= 2)\r\n        console.log('!!!!!!!!!!!!!!!! allFiles:', allFiles);\r\n    if (!allFiles.markdown.get(firstEntryPointPath) && !allFiles.html.get(firstEntryPointPath)) {\r\n        throw new Error(`root file '${firstEntryPointPath}' is supposed to be part of the website`);\r\n    }\r\n    console.log(`processing root file: ${firstEntryPointPath}...`);\r\n    const specRec = await compileMD(firstEntryPointPath, md, allFiles);\r\n    if (DEBUG >= 10)\r\n        console.log('specRec:', specRec);\r\n    // now process the other MD files too:\r\n    for (const slot of allFiles.markdown) {\r\n        const key = slot[0];\r\n        const entry = slot[1];\r\n        entry.destinationRelPath = myCustomPageNamePostprocessor(entry.relativePath.slice(0, entry.relativePath.length - entry.ext.length));\r\n        if (DEBUG >= 5)\r\n            console.log('!!!!!!!!!!!!!!!!!!!!!!!! markdown file record:', entry);\r\n        const specRec2 = await compileMD(key, md, allFiles);\r\n        if (DEBUG >= 3)\r\n            console.log('specRec:', specRec2);\r\n        assert.strictEqual(specRec2, entry);\r\n    }\r\n    // now process the HTML files:\r\n    for (const slot of allFiles.html) {\r\n        const key = slot[0];\r\n        const entry = slot[1];\r\n        entry.destinationRelPath = myCustomPageNamePostprocessor(entry.relativePath.slice(0, entry.relativePath.length - entry.ext.length));\r\n        if (DEBUG >= 5)\r\n            console.log('!!!!!!!!!!!!!!!!!!!!!!!! HTML file record:', entry);\r\n        const specRec2 = await loadHTML(key, allFiles);\r\n        if (DEBUG >= 3)\r\n            console.log('specRec:', specRec2);\r\n        assert.strictEqual(specRec2, entry);\r\n    }\r\n    // now process the CSS, JS and other 'fixed assets' files:\r\n    //\r\n    // [css, js, image, movie, misc, _]\r\n    for (const type in allFiles) {\r\n        switch (type) {\r\n            case 'html':\r\n            case 'markdown':\r\n                continue;\r\n            case 'css':\r\n            case 'js':\r\n                {\r\n                    const collection = allFiles[type];\r\n                    for (const slot of collection) {\r\n                        const key = slot[0];\r\n                        const entry = slot[1];\r\n                        entry.destinationRelPath = myCustomPageNamePostprocessor(entry.relativePath.slice(0, entry.relativePath.length - entry.ext.length));\r\n                        if (DEBUG >= 5)\r\n                            console.log(`!!!!!!!!!!!!!!!!!!!!!!!! Type [${type}] file record:`, entry);\r\n                        const specRec2 = await loadFixedAssetTextFile(key, allFiles, collection);\r\n                        if (DEBUG >= 3)\r\n                            console.log('specRec:', specRec2);\r\n                        assert.strictEqual(specRec2, entry);\r\n                    }\r\n                }\r\n                continue;\r\n            default:\r\n                {\r\n                    const collection = allFiles[type];\r\n                    for (const slot of collection) {\r\n                        const key = slot[0];\r\n                        const entry = slot[1];\r\n                        entry.destinationRelPath = myCustomPageNamePostprocessor(entry.relativePath.slice(0, entry.relativePath.length - entry.ext.length));\r\n                        if (DEBUG >= 5)\r\n                            console.log(`!!!!!!!!!!!!!!!!!!!!!!!! Type [${type}] file record:`, entry);\r\n                        const specRec2 = await loadFixedAssetBinaryFile(key, allFiles, collection);\r\n                        if (DEBUG >= 3)\r\n                            console.log('specRec:', specRec2);\r\n                        assert.strictEqual(specRec2, entry);\r\n                    }\r\n                }\r\n                continue;\r\n        }\r\n    }\r\n    // now's the time to match the links in the generated content and do some linkage reporting alongside:\r\n    //\r\n    if (DEBUG >= 1)\r\n        console.log('>>>>>>>>>>>>>>>>>>>> allFiles:', allFiles);\r\n    if (DEBUG >= 1)\r\n        console.log('markdown AST token types:', Object.keys(markdownTokens).sort());\r\n}\r\nasync function compileMD(mdPath, md, allFiles) {\r\n    console.log(`processing file: ${mdPath}...`);\r\n    return new Promise((resolve, reject) => {\r\n        fs.readFile(mdPath, {\r\n            encoding: 'utf8'\r\n        }, async (err, data) => {\r\n            if (err) {\r\n                reject(new Error(`ERROR: read error ${err} for file ${mdPath}`));\r\n                return;\r\n            }\r\n            const env = {\r\n                getIncludeRootDir: null\r\n            };\r\n            if (DEBUG >= 8)\r\n                console.log('source:\\n', data);\r\n            // augment the md instance for use with the markdown_it_include plugin:\r\n            env.getIncludeRootDir = function (options, state, startLine, endLine) {\r\n                if (DEBUG >= 6)\r\n                    console.log('##### include root dir is today:', { dir: path.dirname(mdPath) });\r\n                return path.dirname(mdPath);\r\n            };\r\n            // let content = md.render(data); --> .parse + .renderer.render\r\n            //\r\n            // .parse --> new state + process: return tokens\r\n            // let tokens = md.parse(data, env)\r\n            const state = new md.core.State(data, md, env);\r\n            md.core.process(state);\r\n            const tokens = state.tokens;\r\n            if (DEBUG >= 10)\r\n                console.log('tokens:\\n', JSON.stringify(cleanTokensForDisplay(tokens), null, 2));\r\n            const typeMap = new Set();\r\n            traverseTokens(tokens, (t, idx, arr, depth) => {\r\n                typeMap.add(t.type);\r\n                markdownTokens[t.type] = true;\r\n            });\r\n            if (DEBUG >= 4)\r\n                console.log('token types:', typeMap);\r\n            if (0) {\r\n                let position = 0;\r\n                let prevToken = null;\r\n                traverseTokens(tokens, (t, idx, arr, depth) => {\r\n                    if (!Number.isFinite(t.position)) {\r\n                        console.error('erroneous token position:', t);\r\n                        return;\r\n                    }\r\n                    if (!Number.isFinite(t.size)) {\r\n                        console.error('erroneous token size:', t);\r\n                        return;\r\n                    }\r\n                    if (t.position >= position) {\r\n                        position = t.position;\r\n                    }\r\n                    else {\r\n                        console.warn('token position is dropping back / reversing:', { position, t, prevToken });\r\n                    }\r\n                    prevToken = t;\r\n                });\r\n            }\r\n            const content = md.renderer.render(tokens, md.options, env);\r\n            if (DEBUG >= 4)\r\n                console.log('output:\\n', content);\r\n            const dom = new JSDOM('<html><head>\\n' + content, { includeNodeLocations: true });\r\n            const document = dom.window.document;\r\n            const bodyEl = document.body; // implicitly created\r\n            const headEl = document.querySelector('head');\r\n            if (DEBUG >= 1)\r\n                console.log('MARKDOWN:\\n', { html: document, body: bodyEl.innerHTML, head: headEl.innerHTML });\r\n            // update the file record:\r\n            const el = allFiles.markdown.get(mdPath);\r\n            if (DEBUG >= 3)\r\n                console.log('update the file record:', { mdPath, el });\r\n            el.HtmlContent = content;\r\n            //el.HtmlContent = bodyEl.innerHTML;\r\n            el.HtmlHeadContent = headEl.innerHTML;\r\n            el.HtmlBody = bodyEl;\r\n            el.HtmlHead = headEl;\r\n            resolve(el);\r\n        });\r\n    });\r\n}\r\nasync function loadHTML(htmlPath, allFiles) {\r\n    console.log(`processing file: ${htmlPath}...`);\r\n    return new Promise((resolve, reject) => {\r\n        fs.readFile(htmlPath, {\r\n            encoding: 'utf8'\r\n        }, async (err, data) => {\r\n            if (err) {\r\n                reject(new Error(`ERROR: read error ${err} for file ${htmlPath}`));\r\n                return;\r\n            }\r\n            if (DEBUG >= 1)\r\n                console.log('source:\\n', data);\r\n            const dom = new JSDOM(data, { includeNodeLocations: true });\r\n            const document = dom.window.document;\r\n            const bodyEl = document.body; // implicitly created\r\n            const headEl = document.querySelector('head');\r\n            if (DEBUG >= 1)\r\n                console.log('HTML:\\n', { html: document, body: bodyEl.innerHTML, head: headEl.innerHTML });\r\n            // update the file record:\r\n            const el = allFiles.html.get(htmlPath);\r\n            el.HtmlContent = bodyEl.innerHTML;\r\n            el.HtmlHeadContent = headEl.innerHTML;\r\n            el.HtmlBody = bodyEl;\r\n            el.HtmlHead = headEl;\r\n            resolve(el);\r\n        });\r\n    });\r\n}\r\nasync function loadFixedAssetTextFile(filePath, allFiles, collection) {\r\n    console.log(`processing file: ${filePath}...`);\r\n    return new Promise((resolve, reject) => {\r\n        fs.readFile(filePath, {\r\n            encoding: 'utf8'\r\n        }, async (err, data) => {\r\n            if (err) {\r\n                reject(new Error(`ERROR: read error ${err} for file ${filePath}`));\r\n                return;\r\n            }\r\n            if (DEBUG >= 1)\r\n                console.log('source:\\n', data);\r\n            // update the file record:\r\n            const el = collection.get(filePath);\r\n            el.RawContent = data;\r\n            resolve(el);\r\n        });\r\n    });\r\n}\r\nasync function loadFixedAssetBinaryFile(filePath, allFiles, collection) {\r\n    console.log(`processing file: ${filePath}...`);\r\n    return new Promise((resolve, reject) => {\r\n        fs.readFile(filePath, {\r\n            encoding: 'utf8'\r\n        }, async (err, data) => {\r\n            if (err) {\r\n                reject(new Error(`ERROR: read error ${err} for file ${filePath}`));\r\n                return;\r\n            }\r\n            if (DEBUG >= 1)\r\n                console.log('source:\\n', data);\r\n            // update the file record:\r\n            const el = collection.get(filePath);\r\n            resolve(el);\r\n        });\r\n    });\r\n}\r\nfunction cleanTokensForDisplay(tokens) {\r\n    const rv = [];\r\n    for (const i in tokens) {\r\n        let t = tokens[i];\r\n        t = cleanSingleTokenForDisplay(t);\r\n        if (t.children) {\r\n            t.children = cleanTokensForDisplay(t.children);\r\n        }\r\n        rv[i] = t;\r\n    }\r\n    return rv;\r\n}\r\nfunction cleanSingleTokenForDisplay(token) {\r\n    const rv = {};\r\n    for (const attr in token) {\r\n        if (token[attr] !== '' && token[attr] != null) {\r\n            rv[attr] = token[attr];\r\n        }\r\n    }\r\n    return rv;\r\n}\r\n// https://vuepress.vuejs.org/plugin/life-cycle.html#generated\r\nasync function mdGenerated(pagePaths) {\r\n    // cp docs-src/.nojekyll docs/ && cp docs-src/CNAME docs/\r\n    console.error('async generated HIT');\r\n    fs.writeFileSync(absDstPath('CNAME'), 'qiqqa.org\\n', 'utf8');\r\n    fs.writeFileSync(absDstPath('.nojekyll'), '');\r\n}\r\nfunction traverseTokens(tokens, cb, depth) {\r\n    depth = depth || 0;\r\n    for (let i = 0, len = tokens.length; i < len; i++) {\r\n        const t = tokens[i];\r\n        cb(t, i, tokens, depth);\r\n        if (t.children) {\r\n            traverseTokens(t.children, cb, depth + 1);\r\n        }\r\n    }\r\n}\r\n// demo()\r\n//   .then(() => {\r\n//      console.log('done');\r\n//   })\r\n//   .catch(err => {\r\n//     console.error('error:', err);\r\n//   });\r\n//# sourceMappingURL=index.js.map"],"names":[],"mappings":"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"}