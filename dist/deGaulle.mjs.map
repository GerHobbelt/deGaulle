{"version":3,"file":"deGaulle.mjs","sources":["../src/index.js"],"sourcesContent":["//\n//\n//\nconst nomnom = require('@gerhobbelt/nomnom');\n\nconst MarkDown = require('@gerhobbelt/markdown-it');\n\nconst mdPluginCollective = require('markdown-it-dirty-dozen');\n\nconst pkg = require('../package.json');\n\nconst glob = require('@gerhobbelt/glob');\nconst gitignoreParser = require('@gerhobbelt/gitignore-parser');\nconst assert = require('assert');\nconst _ = require('lodash');\n\nconst path = require('path');\nconst fs = require('fs');\n\nconst DEBUG = false;\n\n\nconst config = {\n  docTreeBasedir: null,\n  destinationPath: null\n};\n\nnomnom.script('deGaulle');\n\nnomnom\n  .command('build')\n  .option('debug', {\n    abbr: 'd',\n    flag: true,\n    help: 'Print debugging info'\n  })\n  .option('config', {\n    abbr: 'c',\n    'default': 'config.json',\n    help: 'JSON file with tests to run'\n  })\n  .callback(function (opts, cmd) {\n    try {\n      buildWebsite(opts, cmd);\n    } catch (ex) {\n      console.error(`ERROR: ${ex.message}\\n\\nException:\\n${ex}`);\n      process.exit(5);\n    }\n  })\n  .help('build website from sources');\n\nnomnom\n  .command('sanity')\n  .option('debug', {\n    abbr: 'd',\n    flag: true,\n    help: 'Print debugging info'\n  })\n  .option('config', {\n    abbr: 'c',\n    'default': 'config.json',\n    help: 'JSON file with tests to run'\n  })\n  .option('outfile', {\n    abbr: 'o',\n    help: 'file to write results to'\n  })\n  .callback(function (\n    opts\n    /* , cmd */\n  ) {\n    try {\n      sanityCheck(opts);\n    } catch (ex) {\n      console.error(`ERROR: ${ex.message}\\n\\nException:\\n${ex}`);\n      process.exit(5);\n    }\n  })\n  .help('run the sanity tests');\n\nnomnom\n  .nocommand()\n  .option('debug', {\n    abbr: 'd',\n    flag: true,\n    help: 'Print debugging info'\n  })\n  .option('config', {\n    abbr: 'c',\n    'default': 'config.json',\n    help: 'JSON file with tests to run'\n  })\n  .option('version', {\n    flag: true,\n    help: 'print version and exit',\n    callback: function () {\n      return `version ${pkg.version}`;\n    }\n  })\n  .callback(function (opts, cmd) {\n    try {\n      buildWebsite(opts, cmd);\n    } catch (ex) {\n      console.error(`ERROR: ${ex.message}\\n\\nException:\\n${ex}`);\n      process.exit(5);\n    }\n  });\n\nnomnom.parse();\n\n\n\n// -- done --\n\n\n\nfunction unixify(path) {\n  return path.replace(/\\\\/g, '/');\n}\n\nfunction absSrcPath(rel) {\n  let p = path.join(config.docTreeBasedir, rel);\n  return unixify(path.resolve(p));\n}\n\nfunction absDstPath(rel) {\n  if (!config.destinationPath) {\n    throw new Error('Internal error: used too early');\n  }\n  let p = path.join(config.destinationPath, rel);\n  return unixify(path.resolve(p));\n}\n\nfunction readOptionalTxtConfigFile(rel) {\n  let p = absSrcPath(rel);\n  if (fs.existsSync(p)) {\n    let src = fs.readFileSync(p, 'utf8');\n  // - split into lines\n  // - filter out any lines whicch don't have an '='\n  // - split each line across the initial '=' in there.\n  // - turn this into a hash table?\n    let lines = src.split(/[\\r\\n]/g);\n    lines = lines.filter((l) => l.trim().length > 1 && l.includes('=')).map((l) => {\n      let parts = l.split('=');\n      if (parts.length !== 2) {\n        throw new Error(`config line in ${rel} is expected to have only one '='`);\n      }\n      parts = parts.map((l) => l.trim());\n      return parts;\n    });\n    let rv = {};\n    lines.forEach((l) => {\n      rv[l[0]] = l[1];\n    });\n    return rv;\n  }\n  return {};\n}\n\nfunction myCustomPageNamePostprocessor(spec) {\n  // clean up unwanted characters\n  spec = spec.replace(/ :: /g, '/');\n  spec = spec.replace(/ --+ /g, '/');\n  spec = _.deburr(spec).trim();\n  // normalize case\n  spec = spec.toLowerCase();\n  spec = spec\n      .replace(/[^\\w\\d\\s\\/_-]/g, '_');\n  spec = spec\n      .replace(/__+/g, '_');\n  spec = spec\n      .replace(/\\s+/g, ' ');\n  console.log('myCustomPageNamePostprocessor STAGE 1', spec);\n  spec = spec\n      .replace(/_-_/g, '_');\n  spec = spec\n      .replace(/ - /g, ' ');\n  spec = spec\n      .replace(/[ _]* [ _]*/g, ' ');\n  console.log('myCustomPageNamePostprocessor STAGE 2', spec);\n  spec = spec\n      .replace(/(^|\\/)[ _]+/g, '$1');\n  spec = spec\n      .replace(/[ _]+($|\\/)/g, '$1');\n  console.log('myCustomPageNamePostprocessor STAGE 3', spec);\n  spec = spec\n      .replace(/ /g, '.');\n  console.log('myCustomPageNamePostprocessor STAGE 4', spec);\n\n\n  return spec;\n}\n\nasync function buildWebsite(opts, command) {\n  console.log(\n    `buildWebsite: command: ${command || '<no-command>'}, opts: ${JSON.stringify(\n      opts,\n      null,\n      2\n    )}`\n  );\n  let paths = opts._.slice(command ? 1 : 0);\n  const minPathsCount = 1;\n\n  if (!paths || paths.length < minPathsCount) {\n    throw new Error(\n      'Must specify at least one file path as starting point. None were specified.'\n    );\n  }\n\n  let firstEntryPointPath = paths[0];\n  // make sure we start with an absolute path; everything will derived off this one.\n  if (!path.isAbsolute(firstEntryPointPath)) {\n    firstEntryPointPath = path.join(process.cwd(), firstEntryPointPath);\n  }\n  firstEntryPointPath = path.normalize(firstEntryPointPath);\n  console.log('firstEntryPointPath = ', firstEntryPointPath);\n\n  let entryStats = fs.lstatSync(firstEntryPointPath);\n\n  if (entryStats && entryStats.isDirectory()) {\n    // check if any of the default entry points exist:\n    // - index.md\n    // - index.html\n    // - README.md\n    let indexFile;\n    let indexFilePriority = 0;\n    let scanPath = path.join(firstEntryPointPath, '*.{md,htm,html}');\n    scanPath = unixify(scanPath);\n    console.log('scanPath:', scanPath);\n    let files = glob.sync(scanPath, {\n      nosort: true,\n      nomount: true,\n      nounique: false,\n      nocase: true,     //<-- uncomment this one for total failure to find any files >:-((\n      nodir: true,\n      nobrace: false,\n      gitignore: true\n    });\n    console.log(`root point DIR --> scan: ${JSON.stringify(files, null, 2)}`);\n\n    for (const f of files || []) {\n      switch (path.basename(f.toLowerCase())) {\n      case 'index.md':\n        if (indexFilePriority < 10) {\n          indexFilePriority = 10;\n          indexFile = f;\n        }\n\n        continue;\n\n      case 'index.htm':\n      case 'index.html':\n        if (indexFilePriority < 5) {\n          indexFilePriority = 5;\n          indexFile = f;\n        }\n\n        continue;\n\n      case 'readme.md':\n        if (indexFilePriority < 1) {\n          indexFilePriority = 1;\n          indexFile = f;\n        }\n\n        continue;\n\n      default:\n        continue;\n      }\n    }\n\n    if (indexFile) {\n      firstEntryPointPath = indexFile;\n      entryStats = fs.lstatSync(firstEntryPointPath);\n    } else {\n      throw new Error(\n        `Could not find a default entry point file (index.md, index.html or README.md) in the entry point directory ${firstEntryPointPath} (${scanPath}`\n      );\n    }\n  }\n\n  if (!entryStats) {\n    throw new Error(`entry point does not exist: ${firstEntryPointPath}`);\n  }\n\n  if (!entryStats.isFile()) {\n    throw new Error(`entry point is not a file: ${firstEntryPointPath}`);\n  }\n\n  config.docTreeBasedir = path.dirname(firstEntryPointPath);\n\n\n  let outputDirPath = paths[1] || path.join(config.docTreeBasedir, (!config.docTreeBasedir.endsWith('docs') ? '../docs' : '../' + path.basename(config.docTreeBasedir) + '-output'));\n  // make sure we start with an absolute path; everything will derived off this one.\n  if (!path.isAbsolute(outputDirPath)) {\n    outputDirPath = path.join(process.cwd(), outputDirPath);\n  }\n  outputDirPath = path.normalize(outputDirPath);\n  console.log('outputDirPath = ', outputDirPath);\n  config.destinationPath = outputDirPath;\n\n  config.outputDirRelativePath = unixify(path.relative(config.docTreeBasedir, config.destinationPath));\n\n  console.log('config:', config);\n\n\n  // now scan the entire tree: collect potential files for comparison & treatment\n  //\n  // Produces an array of categories, which each are an array of file records,\n  // where each file record has this format:\n  //\n  // {\n  //   path,        -- full path to file\n  //   nameLC       -- lowercased filename\n  //   ext          -- lowercased filename extension\n  //   relativePath --  relative path to config.docTreeBasedir\n  // }\n  //\n  async function collectAllFiles() {\n    let scanPath = path.join(config.docTreeBasedir, '**/*');\n    scanPath = unixify(scanPath);\n    console.log('scanPath:', scanPath);\n\n    return new Promise((resolve, reject) => {\n      glob(scanPath, {\n        nosort: true,\n        nomount: true,\n        nounique: false,\n        nocase: true,     //<-- uncomment this one for total failure to find any files >:-((\n        nodir: true,\n        nobrace: false,\n        gitignore: true\n      }, function processGlobResults(err, files) {\n        if (err) {\n          reject(new Error(`glob scan error: ${err}`));\n          return;\n        }\n\n        console.log(`root point DIR --> scan: ${JSON.stringify(files, null, 2)}`);\n\n        let rv = {\n          markdown: new Map(),\n          html: new Map(),\n          css: new Map(),\n          js: new Map(),\n          image: new Map(),\n          movie: new Map(),\n          misc: new Map(),\n          _: new Map()\n        };\n        const rv_mapping_def = {\n          markdown: [\n            'md',\n            'markdown'\n          ],\n          html: [\n            'html',\n            'htm'\n          ],\n          js: [\n            'js',\n            'mjs',\n            'ejs',\n            'ts',\n            'coffee'\n          ],\n          css: [\n            'css',\n            'scss',\n            'less',\n            'styl',\n            'stylus'\n          ],\n          image: [\n            'png',\n            'gif',\n            'jpg',\n            'jpeg',\n            'tiff',\n            'bmp',\n            'svg',\n            'psd',\n            'ai'\n          ],\n          movie: [\n            'mkv',\n            'mp4',\n            'avi',\n            'mov',\n            'flv'\n          ]\n        };\n        let rv_mapping = new Map();\n        for (let n in rv_mapping_def) {\n          let a = rv_mapping_def[n];\n          console.log('key n', { n, a });\n          for (let b of a) {\n            console.log('map n -> b', { n, b });\n            rv_mapping.set('.' + b, n);\n          }\n        }\n\n        console.log('######################### mapping ##########################\\n', rv_mapping, '\\n###########################################');\n\n        for (const f of files || []) {\n          let fname = path.basename(f.toLowerCase());\n          let ext = path.extname(fname);\n          let el = {\n            path: f,\n            nameLC: fname,\n            ext: ext,\n            relativePath: unixify(path.relative(config.docTreeBasedir, f))\n          };\n          let cat = rv_mapping.get(ext) || 'misc';\n          rv[cat].set(f, el);\n          rv._.set(f, el);\n        }\n        resolve(rv);\n      });\n    });\n  }\n\n  // async invocation, but don't wait for it yet:\n  let scan = collectAllFiles();\n\n  let md = MarkDown({\n    // Enable HTML tags in source\n    html: true,\n    // Use '/' to close single tags (<br />).\n    xhtmlOut: false,\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n    // CSS language prefix for fenced blocks. Can be useful for external highlighters.\n    langPrefix: 'language-',\n    // Autoconvert URL-like text to links\n    linkify: true,\n    // highSecurity:\n    // - false:           lower protection against XSS/Unicode-Homologue/etc. attacks via the input MarkDown.\n    //                    This setting assumes you own or at least trust the Markdown\n    //                    being fed to MarkDonw-It. The result is a nicer render.\n    // - true (default):  maximum protection against XSS/Unicode-Homologue/etc. attacks via the input MarkDown.\n    //                    This is the default setting and assumes you have no control or absolute trust in the Markdown\n    //                    being fed to MarkDonw-It. Use this setting when using markdown-it as part of a forum or other\n    //                    website where more-or-less arbitrary users can enter and feed any MarkDown to markdown-it.\n    //\n    // See https://en.wikipedia.org/wiki/Internationalized_domain_name for details on homograph attacks, for example.\n    highSecurity: false,\n    // Enable some language-neutral replacement + quotes beautification\n    typographer: true,\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '“”‘’',\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externally.\n    // If result starts with <pre... internal wrapper is skipped.\n    highlight: function () /*str, lang*/\n    {\n      console.error('highligh callback invoked!');\n      return '';\n    } // Configure default attributes for given tags\n    //default_attributes: { a: [['rel', 'nofollow']] }\n  });\n\n  // augment the md instance for use with the markdown_it_include plugin:\n  //md.getIncludeRootDir = ...\n\n  console.log('setting up markdown-it:', mdPluginCollective, typeof mdPluginCollective.use_dirty_dozen);\n  mdPluginCollective.use_dirty_dozen(md, {\n    abbr: {\n      abbreviations: readOptionalTxtConfigFile('.deGaulle/abbr-abbreviations.txt'),\n      links:         readOptionalTxtConfigFile('.deGaulle/abbr-links.txt'),\n      emphasis:      readOptionalTxtConfigFile('.deGaulle/abbr-emphasis-phrases.txt')\n    },\n\n    include: {\n      root: '/bogus/',\n      getRootDir: (options, state, startLine, endLine) => state.env.getIncludeRootDir(options, state, startLine, endLine)\n    },\n\n    wikilinks: {\n      postProcessPageName: myCustomPageNamePostprocessor\n    }\n  });\n\n\n  let allFiles = await scan;\n  if (DEBUG)  console.log('!!!!!!!!!!!!!!!! allFiles:', allFiles);\n\n  if (!allFiles.markdown.get(firstEntryPointPath) && !allFiles.html.get(firstEntryPointPath)) {\n    throw new Error(`root file '${firstEntryPointPath}' is supposed to be part of the website`);\n  }\n\n\n\n  console.log(`processing root file: ${firstEntryPointPath}...`);\n  let specRec = await compileMD(firstEntryPointPath, md, allFiles);\n\n  if (DEBUG) console.log('specRec:', specRec);\n\n  // now process the other MD files too:\n  for (let slot of allFiles.markdown) {\n    let key = slot[0];\n    let entry = slot[1];\n    entry.destinationRelPath = myCustomPageNamePostprocessor(entry.relativePath.slice(0, entry.relativePath.length - entry.ext.length));\n    if (DEBUG)     console.log('!!!!!!!!!!!!!!!!!!!!!!!! markdown file record:', entry);\n\n    if (!entry.HtmlContent) {\n      let specRec2 = await compileMD(key, md, allFiles);\n\n      if (DEBUG) console.log('specRec:', specRec2);\n      assert.strictEqual(specRec2, entry);\n    }\n  }\n\n  // now process the HTML files:\n  for (let slot of allFiles.html) {\n    let key = slot[0];\n    let entry = slot[1];\n    entry.destinationRelPath = myCustomPageNamePostprocessor(entry.relativePath.slice(0, entry.relativePath.length - entry.ext.length));\n    if (DEBUG)     console.log('!!!!!!!!!!!!!!!!!!!!!!!! HTML file record:', entry);\n\n    if (!entry.HtmlContent) {\n      let specRec2 = await loadHTML(key, allFiles);\n\n      if (DEBUG) console.log('specRec:', specRec2);\n      assert.strictEqual(specRec2, entry);\n    }\n  }\n\n  // now's the time to match the links in the generated content and do some linkage reporting alongside:\n  //\n\n}\n\n\n\nasync function compileMD(mdPath, md, allFiles) {\n  console.log(`processing file: ${mdPath}...`);\n\n  return new Promise((resolve, reject) => {\n    fs.readFile(\n      mdPath,\n      {\n        encoding: 'utf8'\n      },\n      async (err, data) => {\n        if (err) {\n          reject(new Error(\n            `ERROR: read error ${err} for file ${mdPath}`\n          ));\n          return;\n        }\n\n        let env = {};\n\n        if (DEBUG)          console.log('source:\\n', data);\n\n        // augment the md instance for use with the markdown_it_include plugin:\n        env.getIncludeRootDir = function (options, state, startLine, endLine) {\n          if (DEBUG)          console.log('##### include root dir is today:', { dir: path.dirname(mdPath) });\n          return path.dirname(mdPath);\n        };\n\n        // let content = md.render(data); --> .parse + .renderer.render\n        //\n        // .parse --> new state + process: return tokens\n        // let tokens = md.parse(data, env)\n        let state = new md.core.State(data, md, env);\n        md.core.process(state);\n        let tokens = state.tokens;\n\n        //console.log('tokens:\\n', JSON.stringify(cleanTokensForDisplay(tokens), null, 2));\n\n        let typeMap = new Set();\n        traverseTokens(tokens, (t, idx, arr, depth) => {\n          typeMap.add(t.type);\n        });\n        console.log('token types:', typeMap);\n\n        if (0) {\n          let position = 0;\n          let prevToken = null;\n          traverseTokens(tokens, (t, idx, arr, depth) => {\n            if (!Number.isFinite(t.position)) {\n              console.error('erroneous token position:', t);\n              return;\n            }\n            if (!Number.isFinite(t.size)) {\n              console.error('erroneous token size:', t);\n              return;\n            }\n            if (t.position >= position) {\n              position = t.position;\n            } else {\n              console.warn('token position is dropping back / reversing:', { position, t, prevToken });\n            }\n            prevToken = t;\n          });\n        }\n\n        let content = md.renderer.render(tokens, md.options, env);\n\n        if (DEBUG) console.log('output:\\n', content);\n\n          // update the file record:\n        let el = allFiles.markdown.get(mdPath);\n        el.HtmlContent = content;\n\n        resolve(el);\n      }\n    );\n  });\n}\n\n\n\nasync function loadHTML(htmlPath, allFiles) {\n  console.log(`processing file: ${htmlPath}...`);\n\n  return new Promise((resolve, reject) => {\n    fs.readFile(\n      htmlPath,\n      {\n        encoding: 'utf8'\n      },\n      async (err, data) => {\n        if (err) {\n          reject(new Error(\n            `ERROR: read error ${err} for file ${htmlPath}`\n          ));\n          return;\n        }\n\n        if (DEBUG)          console.log('source:\\n', data);\n\n          // update the file record:\n        let el = allFiles.html.get(htmlPath);\n        el.HtmlContent = data;\n\n        resolve(el);\n      }\n    );\n  });\n}\n\n\nfunction cleanTokensForDisplay(tokens) {\n  let rv = [];\n  for (let i in tokens) {\n    let t = tokens[i];\n    t = cleanSingleTokenForDisplay(t);\n    if (t.children) {\n      t.children = cleanTokensForDisplay(t.children);\n    }\n    rv[i] = t;\n  }\n  return rv;\n}\n\nfunction cleanSingleTokenForDisplay(token) {\n  let rv = {};\n  for (let attr in token) {\n    if (token[attr] !== '' && token[attr] != null) {\n      rv[attr] = token[attr];\n    }\n  }\n  return rv;\n}\n\n// https://vuepress.vuejs.org/plugin/life-cycle.html#generated\nasync function mdGenerated(pagePaths) {\n  // cp docs-src/.nojekyll docs/ && cp docs-src/CNAME docs/\n  console.error('async generated HIT');\n\n  fs.writeFileSync(absDstPath('CNAME'), 'qiqqa.org\\n', 'utf8');\n\n  fs.writeFileSync(absDstPath('.nojekyll'), '');\n}\n\nfunction traverseTokens(tokens, cb, depth) {\n  depth = depth || 0;\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    let t = tokens[i];\n    cb(t, i, tokens, depth);\n\n    if (t.children) {\n      traverseTokens(t.children, cb, depth + 1);\n    }\n  }\n}\n"],"names":["Symbol","iterator","_settle","pact","state","value","s","_Pact","v","o","bind","then","observer","prototype","onFulfilled","onRejected","result","callback","e","_this","_isSettledPact","thenable","_forTo","array","body","check","i","reject","_cycle","length","_forOf","target","_iteratorSymbol","step","next","done","return","_fixup","TypeError","values","push","loadHTML","htmlPath","allFiles","console","log","Promise","resolve","fs","readFile","encoding","err","data","Error","DEBUG","el","html","get","HtmlContent","compileMD","mdPath","md","env","getIncludeRootDir","options","startLine","endLine","dir","path","dirname","core","State","process","tokens","typeMap","Set","traverseTokens","t","idx","arr","depth","add","type","position","prevToken","Number","isFinite","error","size","warn","content","renderer","render","markdown","buildWebsite","opts","command","collectAllFiles","scanPath","join","config","docTreeBasedir","unixify","glob","nosort","nomount","nounique","nocase","nodir","nobrace","gitignore","processGlobResults","files","JSON","stringify","rv","Map","css","js","image","movie","misc","_","rv_mapping_def","rv_mapping","n","a","b","set","f","fname","basename","toLowerCase","ext","extname","nameLC","relativePath","relative","cat","paths","slice","minPathsCount","firstEntryPointPath","isAbsolute","cwd","normalize","entryStats","lstatSync","isDirectory","indexFile","indexFilePriority","sync","isFile","outputDirPath","endsWith","destinationPath","outputDirRelativePath","scan","MarkDown","xhtmlOut","breaks","langPrefix","linkify","highSecurity","typographer","quotes","highlight","mdPluginCollective","use_dirty_dozen","abbr","abbreviations","readOptionalTxtConfigFile","links","emphasis","include","root","getRootDir","wikilinks","postProcessPageName","myCustomPageNamePostprocessor","specRec","slot","key","entry","destinationRelPath","specRec2","assert","strictEqual","nomnom","require","pkg","gitignoreParser","script","option","flag","help","cmd","ex","message","exit","sanityCheck","nocommand","version","parse","replace","absSrcPath","rel","p","existsSync","src","readFileSync","lines","split","filter","l","trim","includes","map","parts","forEach","spec","deburr","cb","len","children"],"mappings":"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"}