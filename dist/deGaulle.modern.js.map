{"version":3,"file":"deGaulle.modern.js","sources":["../src/index.js"],"sourcesContent":["//\n//\n//\nconst nomnom = require('@gerhobbelt/nomnom');\n\nconst MarkDown = require('@gerhobbelt/markdown-it');\n\nconst mdPluginCollective = require('markdown-it-dirty-dozen');\n\nconst pkg = require('../package.json');\n\nconst jsdom = require('jsdom');\nconst { JSDOM } = jsdom;\nconst glob = require('@gerhobbelt/glob');\nconst gitignoreParser = require('@gerhobbelt/gitignore-parser');\nconst assert = require('assert');\nconst _ = require('lodash');\n\nconst path = require('path');\nconst fs = require('fs');\n\nlet DEBUG = 1;\n\nlet markdownTokens = {};\n\n\nconst config = {\n  docTreeBasedir: null,\n  destinationPath: null\n};\n\nnomnom.script('deGaulle');\n\nnomnom\n  .command('build')\n  .option('debug', {\n    abbr: 'd',\n    flag: false,\n    help: 'Print debugging info'\n  })\n  .option('config', {\n    abbr: 'c',\n    'default': 'config.json',\n    help: 'JSON file with tests to run'\n  })\n  .callback(function (opts, cmd) {\n    try {\n      buildWebsite(opts, cmd);\n    } catch (ex) {\n      console.error(`ERROR: ${ex.message}\\n\\nException:\\n${ex}`);\n      process.exit(5);\n    }\n  })\n  .help('build website from sources');\n\nnomnom\n  .command('sanity')\n  .option('debug', {\n    abbr: 'd',\n    flag: false,\n    help: 'Print debugging info'\n  })\n  .option('config', {\n    abbr: 'c',\n    'default': 'config.json',\n    help: 'JSON file with tests to run'\n  })\n  .option('outfile', {\n    abbr: 'o',\n    help: 'file to write results to'\n  })\n  .callback(function (\n    opts\n    /* , cmd */\n  ) {\n    try {\n      sanityCheck(opts);\n    } catch (ex) {\n      console.error(`ERROR: ${ex.message}\\n\\nException:\\n${ex}`);\n      process.exit(5);\n    }\n  })\n  .help('run the sanity tests');\n\nnomnom\n  .nocommand()\n  .option('debug', {\n    abbr: 'd',\n    flag: false,\n    help: 'Print debugging info'\n  })\n  .option('config', {\n    abbr: 'c',\n    'default': 'config.json',\n    help: 'JSON file with tests to run'\n  })\n  .option('version', {\n    flag: true,\n    help: 'print version and exit',\n    callback: function () {\n      return `version ${pkg.version}`;\n    }\n  })\n  .callback(function (opts, cmd) {\n    try {\n      buildWebsite(opts, cmd);\n    } catch (ex) {\n      console.error(`ERROR: ${ex.message}\\n\\nException:\\n${ex}`);\n      process.exit(5);\n    }\n  });\n\nnomnom.parse();\n\n\n\n// -- done --\n\n\n\nfunction unixify(path) {\n  return path.replace(/\\\\/g, '/');\n}\n\nfunction absSrcPath(rel) {\n  let p = path.join(config.docTreeBasedir, rel);\n  return unixify(path.resolve(p));\n}\n\nfunction absDstPath(rel) {\n  if (!config.destinationPath) {\n    throw new Error('Internal error: used too early');\n  }\n  let p = path.join(config.destinationPath, rel);\n  return unixify(path.resolve(p));\n}\n\nfunction readOptionalTxtConfigFile(rel) {\n  let p = absSrcPath(rel);\n  if (fs.existsSync(p)) {\n    let src = fs.readFileSync(p, 'utf8');\n  // - split into lines\n  // - filter out any lines whicch don't have an '='\n  // - split each line across the initial '=' in there.\n  // - turn this into a hash table?\n    let lines = src.split(/[\\r\\n]/g);\n    lines = lines.filter((l) => l.trim().length > 1 && l.includes('=')).map((l) => {\n      let parts = l.split('=');\n      if (parts.length !== 2) {\n        throw new Error(`config line in ${rel} is expected to have only one '='`);\n      }\n      parts = parts.map((l) => l.trim());\n      return parts;\n    });\n    let rv = {};\n    lines.forEach((l) => {\n      rv[l[0]] = l[1];\n    });\n    return rv;\n  }\n  return {};\n}\n\nfunction myCustomPageNamePostprocessor(spec) {\n  // clean up unwanted characters\n  spec = spec.replace(/ :: /g, '/');\n  spec = spec.replace(/ --* /g, '/');\n  spec = _.deburr(spec).trim();\n  // normalize case\n  spec = spec.toLowerCase();\n  spec = spec\n      .replace(/[^\\w\\d\\s\\/_-]/g, '_');\n  spec = spec\n      .replace(/__+/g, '_');\n  spec = spec\n      .replace(/\\s+/g, ' ');\n  if (DEBUG >= 7) console.log('myCustomPageNamePostprocessor STAGE 1', spec);\n  spec = spec\n      .replace(/_-_/g, '_');\n  spec = spec\n      .replace(/ - /g, ' ');\n  spec = spec\n      .replace(/[ _]* [ _]*/g, ' ');\n  if (DEBUG >= 7) console.log('myCustomPageNamePostprocessor STAGE 2', spec);\n  spec = spec\n      .replace(/(^|\\/)[ _]+/g, '$1');\n  spec = spec\n      .replace(/[ _]+($|\\/)/g, '$1');\n  if (DEBUG >= 7) console.log('myCustomPageNamePostprocessor STAGE 3', spec);\n  spec = spec\n      .replace(/ /g, '_');\n  if (DEBUG >= 7) console.log('myCustomPageNamePostprocessor STAGE 4', spec);\n\n\n  return spec;\n}\n\nasync function buildWebsite(opts, command) {\n  console.log(\n    `buildWebsite: command: ${command || '<no-command>'}, opts: ${JSON.stringify(\n      opts,\n      null,\n      2\n    )}`\n  );\n\n  DEBUG = Math.max(DEBUG, Number.isFinite(+opts.debug) ? +opts.debug : opts.debug ? 1 : 0);\n  console.log('DEBUG = ', DEBUG);\n\n  let paths = opts._.slice(command ? 1 : 0);\n  const minPathsCount = 1;\n\n  if (!paths || paths.length < minPathsCount) {\n    throw new Error(\n      'Must specify at least one file path as starting point. None were specified.'\n    );\n  }\n\n  let firstEntryPointPath = paths[0];\n  // make sure we start with an absolute path; everything will derived off this one.\n  if (!path.isAbsolute(firstEntryPointPath)) {\n    firstEntryPointPath = path.join(process.cwd(), firstEntryPointPath);\n  }\n  firstEntryPointPath = unixify(path.normalize(firstEntryPointPath));\n  if (DEBUG >= 1) console.log('firstEntryPointPath = ', firstEntryPointPath);\n\n  let entryStats = fs.lstatSync(firstEntryPointPath);\n\n  if (entryStats && entryStats.isDirectory()) {\n    // check if any of the default entry points exist:\n    // - index.md\n    // - index.html\n    // - README.md\n    let indexFile;\n    let indexFilePriority = 0;\n    let scanPath = path.join(firstEntryPointPath, '*.{md,htm,html}');\n    scanPath = unixify(scanPath);\n    if (DEBUG >= 1) console.log('scanPath:', scanPath);\n    let files = glob.sync(scanPath, {\n      nosort: true,\n      nomount: true,\n      nounique: false,\n      nocase: true,     //<-- uncomment this one for total failure to find any files >:-((\n      nodir: true,\n      nobrace: false,\n      gitignore: true\n    });\n    if (DEBUG >= 1) console.log(`root point DIR --> scan: ${JSON.stringify(files, null, 2)}`);\n\n    for (const f of files || []) {\n      switch (path.basename(f.toLowerCase())) {\n      case 'index.md':\n        if (indexFilePriority < 10) {\n          indexFilePriority = 10;\n          indexFile = f;\n        }\n\n        continue;\n\n      case 'index.htm':\n      case 'index.html':\n        if (indexFilePriority < 5) {\n          indexFilePriority = 5;\n          indexFile = f;\n        }\n\n        continue;\n\n      case 'readme.md':\n        if (indexFilePriority < 1) {\n          indexFilePriority = 1;\n          indexFile = f;\n        }\n\n        continue;\n\n      default:\n        continue;\n      }\n    }\n\n    if (indexFile) {\n      firstEntryPointPath = unixify(path.resolve(indexFile));\n      if (DEBUG >= 1) console.log('firstEntryPointPath', firstEntryPointPath);\n      entryStats = fs.lstatSync(firstEntryPointPath);\n    } else {\n      throw new Error(\n        `Could not find a default entry point file (index.md, index.html or README.md) in the entry point directory ${firstEntryPointPath} (${scanPath}`\n      );\n    }\n  }\n\n  if (!entryStats) {\n    throw new Error(`entry point does not exist: ${firstEntryPointPath}`);\n  }\n\n  if (!entryStats.isFile()) {\n    throw new Error(`entry point is not a file: ${firstEntryPointPath}`);\n  }\n\n  config.docTreeBasedir = path.dirname(firstEntryPointPath);\n\n\n  let outputDirPath = paths[1] || path.join(config.docTreeBasedir, (!config.docTreeBasedir.endsWith('docs') ? '../docs' : '../' + path.basename(config.docTreeBasedir) + '-output'));\n  // make sure we start with an absolute path; everything will derived off this one.\n  if (!path.isAbsolute(outputDirPath)) {\n    outputDirPath = path.join(process.cwd(), outputDirPath);\n  }\n  outputDirPath = unixify(path.normalize(outputDirPath));\n  if (DEBUG >= 1) console.log('outputDirPath = ', outputDirPath);\n  config.destinationPath = outputDirPath;\n\n  config.outputDirRelativePath = unixify(path.relative(config.docTreeBasedir, config.destinationPath));\n\n  if (DEBUG >= 1) console.log('config:', config);\n\n\n  // now scan the entire tree: collect potential files for comparison & treatment\n  //\n  // Produces an array of categories, which each are an array of file records,\n  // where each file record has this format:\n  //\n  // {\n  //   path,        -- full path to file\n  //   nameLC       -- lowercased filename\n  //   ext          -- lowercased filename extension\n  //   relativePath --  relative path to config.docTreeBasedir\n  // }\n  //\n  async function collectAllFiles() {\n    let scanPath = path.join(config.docTreeBasedir, '**/*');\n    scanPath = unixify(scanPath);\n    if (DEBUG >= 1) console.log('scanPath:', scanPath);\n\n    return new Promise((resolve, reject) => {\n      glob(scanPath, {\n        nosort: true,\n        nomount: true,\n        nounique: false,\n        nocase: true,     //<-- uncomment this one for total failure to find any files >:-((\n        nodir: true,\n        nobrace: false,\n        gitignore: true\n      }, function processGlobResults(err, files) {\n        if (err) {\n          reject(new Error(`glob scan error: ${err}`));\n          return;\n        }\n\n        if (DEBUG >= 1) console.log(`root point DIR --> scan: ${JSON.stringify(files, null, 2)}`);\n\n        let rv = {\n          markdown: new Map(),\n          html: new Map(),\n          css: new Map(),\n          js: new Map(),\n          image: new Map(),\n          movie: new Map(),\n          misc: new Map(),\n          _: new Map()\n        };\n        const rv_mapping_def = {\n          markdown: [\n            'md',\n            'markdown'\n          ],\n          html: [\n            'html',\n            'htm'\n          ],\n          js: [\n            'js',\n            'mjs',\n            'ejs',\n            'ts',\n            'coffee'\n          ],\n          css: [\n            'css',\n            'scss',\n            'less',\n            'styl',\n            'stylus'\n          ],\n          image: [\n            'png',\n            'gif',\n            'jpg',\n            'jpeg',\n            'tiff',\n            'bmp',\n            'svg',\n            'psd',\n            'ai'\n          ],\n          movie: [\n            'mkv',\n            'mp4',\n            'avi',\n            'mov',\n            'flv'\n          ]\n        };\n        let rv_mapping = new Map();\n        for (let n in rv_mapping_def) {\n          let a = rv_mapping_def[n];\n          if (DEBUG >= 4) console.log('key n', { n, a });\n          for (let b of a) {\n            if (DEBUG >= 4) console.log('map n -> b', { n, b });\n            rv_mapping.set('.' + b, n);\n          }\n        }\n\n        if (DEBUG >= 3) console.log('######################### mapping ##########################\\n', rv_mapping, '\\n###########################################');\n\n        for (const p of files || []) {\n          f = unixify(path.resolve(p));\n          if (DEBUG >= 9) console.log('hacky fix for glob output not being abs path on Windows:', { 'in': p, out: f });\n          let fname = path.basename(f.toLowerCase());\n          let ext = path.extname(fname);\n          let el = {\n            path: f,\n            nameLC: fname,\n            ext: ext,\n            relativePath: unixify(path.relative(config.docTreeBasedir, f))\n          };\n          let cat = rv_mapping.get(ext) || 'misc';\n          rv[cat].set(f, el);\n          rv._.set(f, el);\n        }\n        resolve(rv);\n      });\n    });\n  }\n\n  // async invocation, but don't wait for it yet:\n  let scan = collectAllFiles();\n\n  let md = MarkDown({\n    // Enable HTML tags in source\n    html: true,\n    // Use '/' to close single tags (<br />).\n    xhtmlOut: false,\n    // Convert '\\n' in paragraphs into <br>\n    breaks: false,\n    // CSS language prefix for fenced blocks. Can be useful for external highlighters.\n    langPrefix: 'language-',\n    // Autoconvert URL-like text to links\n    linkify: true,\n    // highSecurity:\n    // - false:           lower protection against XSS/Unicode-Homologue/etc. attacks via the input MarkDown.\n    //                    This setting assumes you own or at least trust the Markdown\n    //                    being fed to MarkDonw-It. The result is a nicer render.\n    // - true (default):  maximum protection against XSS/Unicode-Homologue/etc. attacks via the input MarkDown.\n    //                    This is the default setting and assumes you have no control or absolute trust in the Markdown\n    //                    being fed to MarkDonw-It. Use this setting when using markdown-it as part of a forum or other\n    //                    website where more-or-less arbitrary users can enter and feed any MarkDown to markdown-it.\n    //\n    // See https://en.wikipedia.org/wiki/Internationalized_domain_name for details on homograph attacks, for example.\n    highSecurity: false,\n    // Enable some language-neutral replacement + quotes beautification\n    typographer: true,\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '“”‘’',\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externally.\n    // If result starts with <pre... internal wrapper is skipped.\n    highlight: function () /*str, lang*/\n    {\n      console.error('highligh callback invoked!');\n      return '';\n    } // Configure default attributes for given tags\n    //default_attributes: { a: [['rel', 'nofollow']] }\n  });\n\n  // augment the md instance for use with the markdown_it_include plugin:\n  //md.getIncludeRootDir = ...\n\n  if (DEBUG >= 1) console.log('setting up markdown-it:', mdPluginCollective, typeof mdPluginCollective.use_dirty_dozen);\n  mdPluginCollective.use_dirty_dozen(md, {\n    abbr: {\n      abbreviations: readOptionalTxtConfigFile('.deGaulle/abbr-abbreviations.txt'),\n      links:         readOptionalTxtConfigFile('.deGaulle/abbr-links.txt'),\n      emphasis:      readOptionalTxtConfigFile('.deGaulle/abbr-emphasis-phrases.txt')\n    },\n\n    include: {\n      root: '/bogus/',\n      getRootDir: (options, state, startLine, endLine) => state.env.getIncludeRootDir(options, state, startLine, endLine)\n    },\n\n    wikilinks: {\n      postProcessPageName: function (pageName) {\n        let rv = myCustomPageNamePostprocessor(pageName);\n        if (DEBUG >= 1) console.log('wikilink transform:', { 'in': pageName, out: rv });\n        return rv;\n      }\n    }\n  });\n\n\n  let allFiles = await scan;\n  if (DEBUG >= 2) console.log('!!!!!!!!!!!!!!!! allFiles:', allFiles);\n\n  if (!allFiles.markdown.get(firstEntryPointPath) && !allFiles.html.get(firstEntryPointPath)) {\n    throw new Error(`root file '${firstEntryPointPath}' is supposed to be part of the website`);\n  }\n\n\n\n  console.log(`processing root file: ${firstEntryPointPath}...`);\n  let specRec = await compileMD(firstEntryPointPath, md, allFiles);\n\n  if (DEBUG >= 10) console.log('specRec:', specRec);\n\n  // now process the other MD files too:\n  for (let slot of allFiles.markdown) {\n    let key = slot[0];\n    let entry = slot[1];\n    entry.destinationRelPath = myCustomPageNamePostprocessor(entry.relativePath.slice(0, entry.relativePath.length - entry.ext.length));\n    if (DEBUG >= 5) console.log('!!!!!!!!!!!!!!!!!!!!!!!! markdown file record:', entry);\n\n    let specRec2 = await compileMD(key, md, allFiles);\n\n    if (DEBUG >= 3) console.log('specRec:', specRec2);\n    assert.strictEqual(specRec2, entry);\n  }\n\n  // now process the HTML files:\n  for (let slot of allFiles.html) {\n    let key = slot[0];\n    let entry = slot[1];\n    entry.destinationRelPath = myCustomPageNamePostprocessor(entry.relativePath.slice(0, entry.relativePath.length - entry.ext.length));\n    if (DEBUG >= 5) console.log('!!!!!!!!!!!!!!!!!!!!!!!! HTML file record:', entry);\n\n    let specRec2 = await loadHTML(key, allFiles);\n\n    if (DEBUG >= 3) console.log('specRec:', specRec2);\n    assert.strictEqual(specRec2, entry);\n  }\n\n  // now process the CSS, JS and other 'fixed assets' files:\n  //\n  // [css, js, image, movie, misc, _]\n  for (let type in allFiles) {\n    switch (type) {\n    case 'html':\n    case 'markdown':\n      continue;\n\n    case 'css':\n    case 'js':\n      for (let slot of allFiles[type]) {\n        let key = slot[0];\n        let entry = slot[1];\n        entry.destinationRelPath = myCustomPageNamePostprocessor(entry.relativePath.slice(0, entry.relativePath.length - entry.ext.length));\n        if (DEBUG >= 5) console.log(`!!!!!!!!!!!!!!!!!!!!!!!! Type [${type}] file record:`, entry);\n\n        let specRec2 = await loadFixedAssetTextFile(key, allFiles);\n\n        if (DEBUG >= 3) console.log('specRec:', specRec2);\n        assert.strictEqual(specRec2, entry);\n      }\n      continue;\n\n    default:\n      for (let slot of allFiles[type]) {\n        let key = slot[0];\n        let entry = slot[1];\n        entry.destinationRelPath = myCustomPageNamePostprocessor(entry.relativePath.slice(0, entry.relativePath.length - entry.ext.length));\n        if (DEBUG >= 5) console.log(`!!!!!!!!!!!!!!!!!!!!!!!! Type [${type}] file record:`, entry);\n\n        let specRec2 = await loadFixedAssetBinaryFile(key, allFiles);\n\n        if (DEBUG >= 3) console.log('specRec:', specRec2);\n        assert.strictEqual(specRec2, entry);\n      }\n      continue;\n    }\n  }\n\n  // now's the time to match the links in the generated content and do some linkage reporting alongside:\n  //\n  if (DEBUG >= 1) console.log('>>>>>>>>>>>>>>>>>>>> allFiles:', allFiles);\n  if (DEBUG >= 1) console.log('markdown AST token types:', Object.keys(markdownTokens).sort());\n\n\n\n\n\n\n\n}\n\n\n\nasync function compileMD(mdPath, md, allFiles) {\n  console.log(`processing file: ${mdPath}...`);\n\n  return new Promise((resolve, reject) => {\n    fs.readFile(\n      mdPath,\n      {\n        encoding: 'utf8'\n      },\n      async (err, data) => {\n        if (err) {\n          reject(new Error(\n            `ERROR: read error ${err} for file ${mdPath}`\n          ));\n          return;\n        }\n\n        let env = {};\n\n        if (DEBUG >= 8)          console.log('source:\\n', data);\n\n        // augment the md instance for use with the markdown_it_include plugin:\n        env.getIncludeRootDir = function (options, state, startLine, endLine) {\n          if (DEBUG >= 6)          console.log('##### include root dir is today:', { dir: path.dirname(mdPath) });\n          return path.dirname(mdPath);\n        };\n\n        // let content = md.render(data); --> .parse + .renderer.render\n        //\n        // .parse --> new state + process: return tokens\n        // let tokens = md.parse(data, env)\n        let state = new md.core.State(data, md, env);\n        md.core.process(state);\n        let tokens = state.tokens;\n\n        if (DEBUG >= 10) console.log('tokens:\\n', JSON.stringify(cleanTokensForDisplay(tokens), null, 2));\n\n        let typeMap = new Set();\n        traverseTokens(tokens, (t, idx, arr, depth) => {\n          typeMap.add(t.type);\n          markdownTokens[t.type] = true;\n        });\n        if (DEBUG >= 4) console.log('token types:', typeMap);\n\n        if (0) {\n          let position = 0;\n          let prevToken = null;\n          traverseTokens(tokens, (t, idx, arr, depth) => {\n            if (!Number.isFinite(t.position)) {\n              console.error('erroneous token position:', t);\n              return;\n            }\n            if (!Number.isFinite(t.size)) {\n              console.error('erroneous token size:', t);\n              return;\n            }\n            if (t.position >= position) {\n              position = t.position;\n            } else {\n              console.warn('token position is dropping back / reversing:', { position, t, prevToken });\n            }\n            prevToken = t;\n          });\n        }\n\n        let content = md.renderer.render(tokens, md.options, env);\n\n        if (DEBUG >= 4) console.log('output:\\n', content);\n\n        const dom = new JSDOM('<html><head>\\n' + content,\n          { includeNodeLocations: true }\n        );\n\n        const document = dom.window.document;\n        const bodyEl = document.body; // implicitly created\n        const headEl = document.querySelector('head');\n        if (DEBUG >= 1)          console.log('MARKDOWN:\\n', { html: document, body: bodyEl.innerHTML, head: headEl.innerHTML });\n\n        // update the file record:\n        let el = allFiles.markdown.get(mdPath);\n        if (DEBUG >= 3) console.log('update the file record:', { mdPath, el });\n        el.HtmlContent = content;\n        //el.HtmlContent = bodyEl.innerHTML;\n        el.HtmlHeadContent = headEl.innerHTML;\n        el.HtmlBody = bodyEl;\n        el.HtmlHead = headEl;\n\n        resolve(el);\n      }\n    );\n  });\n}\n\n\n\nasync function loadHTML(htmlPath, allFiles) {\n  console.log(`processing file: ${htmlPath}...`);\n\n  return new Promise((resolve, reject) => {\n    fs.readFile(\n      htmlPath,\n      {\n        encoding: 'utf8'\n      },\n      async (err, data) => {\n        if (err) {\n          reject(new Error(\n            `ERROR: read error ${err} for file ${htmlPath}`\n          ));\n          return;\n        }\n\n        if (DEBUG >= 1)          console.log('source:\\n', data);\n\n        const dom = new JSDOM(data,\n          { includeNodeLocations: true }\n        );\n\n        const document = dom.window.document;\n        const bodyEl = document.body; // implicitly created\n        const headEl = document.querySelector('head');\n        if (DEBUG >= 1)          console.log('HTML:\\n', { html: document, body: bodyEl.innerHTML, head: headEl.innerHTML });\n\n        // update the file record:\n        let el = allFiles.html.get(htmlPath);\n        el.HtmlContent = bodyEl.innerHTML;\n        el.HtmlHeadContent = headEl.innerHTML;\n        el.HtmlBody = bodyEl;\n        el.HtmlHead = headEl;\n\n        resolve(el);\n      }\n    );\n  });\n}\n\nasync function loadFixedAssetTextFile(filePath, allFiles) {\n  console.log(`processing file: ${filePath}...`);\n\n  return new Promise((resolve, reject) => {\n    fs.readFile(\n      htmlPath,\n      {\n        encoding: 'utf8'\n      },\n      async (err, data) => {\n        if (err) {\n          reject(new Error(\n            `ERROR: read error ${err} for file ${htmlPath}`\n          ));\n          return;\n        }\n\n        if (DEBUG >= 1)          console.log('source:\\n', data);\n\n        // update the file record:\n        el.RawContent = data;\n\n        resolve(el);\n      }\n    );\n  });\n}\n\nasync function loadFixedAssetBinaryFile(filePath, allFiles) {\n  console.log(`processing file: ${filePath}...`);\n\n  return new Promise((resolve, reject) => {\n    fs.readFile(\n      htmlPath,\n      {\n        encoding: 'utf8'\n      },\n      async (err, data) => {\n        if (err) {\n          reject(new Error(\n            `ERROR: read error ${err} for file ${htmlPath}`\n          ));\n          return;\n        }\n\n        if (DEBUG >= 1)          console.log('source:\\n', data);\n\n        // update the file record:\n\n        resolve(el);\n      }\n    );\n  });\n}\n\n\nfunction cleanTokensForDisplay(tokens) {\n  let rv = [];\n  for (let i in tokens) {\n    let t = tokens[i];\n    t = cleanSingleTokenForDisplay(t);\n    if (t.children) {\n      t.children = cleanTokensForDisplay(t.children);\n    }\n    rv[i] = t;\n  }\n  return rv;\n}\n\nfunction cleanSingleTokenForDisplay(token) {\n  let rv = {};\n  for (let attr in token) {\n    if (token[attr] !== '' && token[attr] != null) {\n      rv[attr] = token[attr];\n    }\n  }\n  return rv;\n}\n\n// https://vuepress.vuejs.org/plugin/life-cycle.html#generated\nasync function mdGenerated(pagePaths) {\n  // cp docs-src/.nojekyll docs/ && cp docs-src/CNAME docs/\n  console.error('async generated HIT');\n\n  fs.writeFileSync(absDstPath('CNAME'), 'qiqqa.org\\n', 'utf8');\n\n  fs.writeFileSync(absDstPath('.nojekyll'), '');\n}\n\nfunction traverseTokens(tokens, cb, depth) {\n  depth = depth || 0;\n  for (let i = 0, len = tokens.length; i < len; i++) {\n    let t = tokens[i];\n    cb(t, i, tokens, depth);\n\n    if (t.children) {\n      traverseTokens(t.children, cb, depth + 1);\n    }\n  }\n}\n"],"names":["nomnom","require","MarkDown","mdPluginCollective","pkg","jsdom","JSDOM","glob","gitignoreParser","assert","_","path","fs","DEBUG","markdownTokens","config","docTreeBasedir","destinationPath","script","command","option","abbr","flag","help","callback","opts","cmd","buildWebsite","ex","console","error","message","process","exit","sanityCheck","nocommand","version","parse","unixify","replace","absSrcPath","rel","p","join","resolve","readOptionalTxtConfigFile","existsSync","src","readFileSync","lines","split","filter","l","trim","length","includes","map","parts","Error","rv","forEach","myCustomPageNamePostprocessor","spec","deburr","toLowerCase","log","JSON","stringify","Math","max","Number","isFinite","debug","paths","slice","minPathsCount","firstEntryPointPath","isAbsolute","cwd","normalize","entryStats","lstatSync","isDirectory","indexFile","indexFilePriority","scanPath","files","sync","nosort","nomount","nounique","nocase","nodir","nobrace","gitignore","f","basename","isFile","dirname","outputDirPath","endsWith","outputDirRelativePath","relative","collectAllFiles","Promise","reject","processGlobResults","err","markdown","Map","html","css","js","image","movie","misc","rv_mapping_def","rv_mapping","n","a","b","set","out","fname","ext","extname","el","nameLC","relativePath","cat","get","scan","md","xhtmlOut","breaks","langPrefix","linkify","highSecurity","typographer","quotes","highlight","use_dirty_dozen","abbreviations","links","emphasis","include","root","getRootDir","options","state","startLine","endLine","env","getIncludeRootDir","wikilinks","postProcessPageName","pageName","allFiles","specRec","compileMD","slot","key","entry","destinationRelPath","specRec2","strictEqual","loadHTML","type","loadFixedAssetTextFile","loadFixedAssetBinaryFile","Object","keys","sort","mdPath","readFile","encoding","data","dir","core","State","tokens","cleanTokensForDisplay","typeMap","Set","traverseTokens","t","idx","arr","depth","add","content","renderer","render","dom","includeNodeLocations","document","window","bodyEl","body","headEl","querySelector","innerHTML","head","HtmlContent","HtmlHeadContent","HtmlBody","HtmlHead","htmlPath","filePath","RawContent","i","cleanSingleTokenForDisplay","children","token","attr","cb","len"],"mappings":"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"}